{
  "comments": [
    {
      "key": {
        "uuid": "AAADZH//7WM\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 93
      },
      "writtenOn": "2012-11-21T14:40:38Z",
      "side": 1,
      "message": "that",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZX//+lw\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-11-24T11:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAADZH//7WM\u003d",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZH//7V4\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 93
      },
      "writtenOn": "2012-11-21T14:40:38Z",
      "side": 1,
      "message": "How comes all scores are zero?",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZH//7Uc\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-11-21T15:07:04Z",
      "side": 1,
      "message": "They are not set, this is still being tested.\nRemoved from tests that are automatically run.",
      "parentUuid": "AAADZH//7V4\u003d",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZH//7V8\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 93
      },
      "writtenOn": "2012-11-21T14:40:38Z",
      "side": 1,
      "message": "provider should be static",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZH//7UM\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-11-21T15:07:04Z",
      "side": 1,
      "message": "http://www.phpunit.de/manual/3.6/en/writing-tests-for-phpunit.html",
      "parentUuid": "AAADZH//7V8\u003d",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZH//7TI\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 93
      },
      "writtenOn": "2012-11-21T15:09:28Z",
      "side": 1,
      "message": "https://gerrit.wikimedia.org/r/28794",
      "parentUuid": "AAADZH//7UM\u003d",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZX///68\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-11-21T22:07:19Z",
      "side": 1,
      "message": "The _manual_ uses both forms. Also _our_ code use both form. Unless anyone can say something definite I\u0027m going to leave it like this.",
      "parentUuid": "AAADZH//7TI\u003d",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZX///j4\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 93
      },
      "writtenOn": "2012-11-22T08:42:48Z",
      "side": 1,
      "message": "1) Providers have been converted to \"public static function provideX\", as the linked commit proves.\n2) The providers are called statically. I spent hours debugging test case where provider tried to use $this but silently failed. All that time would have not been wasted if the providers were marked as static as they are supposed to.\n\nIf that is not definite I don\u0027t know what is.",
      "parentUuid": "AAADZX///68\u003d",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADZX//+lo\u003d",
        "filename": "repo/tests/phpunit/includes/FuzzyCompareTest.php",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-11-24T11:20:47Z",
      "side": 1,
      "message": "The _manual_ itself use a mixture of static and non-static methods for providers, and the tests in a later patchset do run as they are expected to and asserts the values they are expected to. The test methods are also verified to run, and they also processes the actual strings. That is in this case the expected value is zero (0) so the tests do fail and reports the actual values. This is done intentionally to make it possible to verify the actual numbers from this patchset against expected values.\n\nNote also that there are a bunch of tests with providers that are non-static in our test setup.",
      "parentUuid": "AAADZX///j4\u003d",
      "revId": "892ed3694859837d271a34a26f6d51509efd0036",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}