{
  "comments": [
    {
      "key": {
        "uuid": "0e81134c_7ec6f64f",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 920
      },
      "writtenOn": "2017-06-09T07:58:26Z",
      "side": 1,
      "message": "It looks like it\u0027s a singleton and singletons usually should be avoided. Making it a part of WikibaseRepo (like most services) would be the best option I think.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_7e8596b0",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-09T09:58:26Z",
      "side": 1,
      "message": "(Did you mean WikibaseClient?) I have just scrolled through WBC and didn\u0027t find any hook handlers stored there. So would you hint me how it should look like?",
      "parentUuid": "0e81134c_7ec6f64f",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_2a633e3d",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 920
      },
      "writtenOn": "2017-06-12T08:49:43Z",
      "side": 1,
      "message": "Yes, As an example I can see InfoActionHookHandler but it\u0027s not in WikibaseClient, it\u0027s in the other part but it\u0027s not a singleton which is my point.",
      "parentUuid": "0e81134c_7e8596b0",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_748b641c",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-13T11:47:37Z",
      "side": 1,
      "message": "I believe what avoiding the singleton (kind of) could like would be by using this class in Wikibase\\ClientHooks.\nTwo methods would be added there, and the instance(s) of the hook handler will created there, instead of ChangesListLinesHandler::onOldChangesListRecentChangesLine and ChangesListLinesHandler::onEnhancedChangesListModifyBlockLineData instantiate it.",
      "parentUuid": "0e81134c_2a633e3d",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_d7825297",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-13T13:43:17Z",
      "side": 1,
      "message": "If this shouldn\u0027t be a singleton class, we just need to replace getInstance calls with newFromGlobalState ones.\n\nI should finally explain why I initially made it singleton. I noticed that ChangesList is, in fact, a \"singleton\" (only one instance is created). The dependencies for this class are obtained from this ChangesList class, so I didn\u0027t see any problem in having a single instance during handling because this is what I saw in other hook classes.\n\nOTOH the previous code created a new formatter for each line.",
      "parentUuid": "0e81134c_748b641c",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_374e603d",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-14T09:04:17Z",
      "side": 1,
      "message": "Yeah, having an instance of the handler for each line does not seem a good idea.\nSo I guess we can keep it as this \"static singleton\" here. It is not very nice, but it makes sense here.",
      "parentUuid": "0e81134c_d7825297",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_94904848",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-13T11:47:37Z",
      "side": 1,
      "message": "@param ChangesList $changesList\n\nCould also be skipped IMO, as there is a type hint in the param list.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_3495dc35",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-13T11:47:37Z",
      "side": 1,
      "message": "@param ChangesList $changesList\n\nCould also add type hint to the param list as above (and possibly phpdoc no longer needed then?)",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_09be94d1",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "random remark, sorry if completely rubbish: looking at other methods, shouldn\u0027t this also be setting wikibase-edit rc flag to try in cases when the change is not Wikibase RC?",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_c494f33b",
        "filename": "client/includes/Hooks/ChangesListLinesHandler.php",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "No, the old line doesn\u0027t have structured data about used flags because it doesn\u0027t build those blocks. On the other hand, Enhanced RC\u0027s blocks need to collect flags from the collapsed lines separately, so that they know which flags should be put on the top line.",
      "parentUuid": "ee859f59_09be94d1",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_c46953be",
        "filename": "client/includes/RecentChanges/ChangeLineFormatter.php",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "So is it intended that userTalkLink always starts with the \u0027word-separator\u0027? I am not really aware how Enhanced RC works, but if having those different elements in $data is only needed to format the actual HTML/text input, that\u0027s OK I guess, although still a bit odd. If those fields are also supposed to have some \"semantics\" apart from just being glued together to a result string, having formatting related stuff like word separator or parentheses in there seems a bit wrong.\n\nBut yeah, I guess you do it that way because of some MW core limitations, right?",
      "range": {
        "startLine": 93,
        "startChar": 26,
        "endLine": 93,
        "endChar": 48
      },
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_4416c3f7",
        "filename": "client/includes/RecentChanges/ChangeLineFormatter.php",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "See for example https://phabricator.wikimedia.org/source/mediawiki/browse/master/includes/changes/EnhancedChangesList.php;4e77caf13400a0a2fe8f06a4fca683f2bf804c33$706 - since the array is concatenated with an empty string, there\u0027s certainly place for a separator.",
      "parentUuid": "ee859f59_c46953be",
      "range": {
        "startLine": 93,
        "startChar": 26,
        "endLine": 93,
        "endChar": 48
      },
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_e441f70f",
        "filename": "client/includes/RecentChanges/ChangeLineFormatter.php",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "Looking at this method and at formatDataForEnhancedLine I started to wonder whether it would not make sense to have them in some separate Formatter class.\nI get what it makes some sense to put them here together with the old format method. Both are used in similar context, and operate on similar input.\nOn the other hand, the way the produce their output is quite different. That\u0027s why I wonder maybe it would be cleaner to have them separated. Both types of methods are used in different context so if there were two classes there would be no need for common interface (which those methods obviously don\u0027t have).\nWith \"old style\" and \"enhanced\" line formatting split, there would also be no need to change all those user-link-formatting methods, you\u0027ve changed here so they fit both uses.\nThere probably would be some duplicated code and logic, on the flip side.\n\nSo basically this long comment is just a suggestion. I\u0027d be happy to see what do you and others think. Should there be two separate formatters, I\u0027d be fine to have this split done separately.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_a4cf6f81",
        "filename": "client/includes/RecentChanges/ChangeLineFormatter.php",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "You are right that my new methods look and work totally differently from the old one. The reason why I put them here was indeed reducing code duplication as well as evading encapsulation (everything is private).\n\nI\u0027m thinking right now of what we could use instead. Inheritance, interfaces, or even traits?",
      "parentUuid": "ee859f59_e441f70f",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_f462f405",
        "filename": "client/includes/RecentChanges/ChangeLineFormatter.php",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-13T11:47:37Z",
      "side": 1,
      "message": "hmm, shouldn\u0027t this be: string[] Array of HTML strings\n\nor something like this?\n\nI mean that \"HTML\" is not \"standard\" and does not match PHP type, whereas string does.\n\nBTW: are we sure that this always returns two-element array? If so, this could maybe also be documented?",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_b7f8ee47",
        "filename": "client/includes/RecentChanges/ChangeLineFormatter.php",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-13T13:43:17Z",
      "side": 1,
      "message": "yeah, this is another my invention that I should stop doing now ;)\n\n(well, I have just found one or two HTML\u0027s in core, so I\u0027m not the first one)",
      "parentUuid": "0e81134c_f462f405",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_d4a0109d",
        "filename": "client/includes/RecentChanges/RecentChangeFactory.php",
        "patchSetId": 6
      },
      "lineNbr": 254,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-13T11:47:37Z",
      "side": 1,
      "message": "I am not super happy of this method being here. Nothing related to the factory really, is it?\n\nOTOH I understand the intention to have this check in a single place, not duplicated in all classes that possibly need to check this. And I also understand that there might not be a better place in the current code to put such a method.\n\nStill, I wonder, maybe it would be OK to have something similar as a private method in ChangesListLinesHandler, and just an inline check in ChangesListSpecialPageHookHandlers?",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e81134c_97212aaf",
        "filename": "client/includes/RecentChanges/RecentChangeFactory.php",
        "patchSetId": 6
      },
      "lineNbr": 254,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-13T13:43:17Z",
      "side": 1,
      "message": "Indeed, when I started coding, I created a private method in the new class. And yeah, this is a factory class, so perhaps nothing but factoring objects should happen here.",
      "parentUuid": "0e81134c_d4a0109d",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_4947bc50",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 6,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "import not needed",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_c4e2b3d0",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 6,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "thanks for cleaning them up!",
      "parentUuid": "ee859f59_4947bc50",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_a93ae8be",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "import not needed",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_c952cc16",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "not needed import",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_e9e55007",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "minor and arguable idea: maybe instead of having a parameter on getChangeFactory, it would make sense to have two methods: one returning a change factory that should never be used, and the one that is expecting to be called.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_84c6eb4c",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "No strong opinion, I took advantage of method arguments as a \"setting\" for the fake instance.\n\nI\u0027m not sure whether some other arguments would be better:\n* true/false\n* \u0027once\u0027/\u0027never\u0027 (strings)\n* $this-\u003eonce()/$this-\u003enever() (objects)",
      "parentUuid": "ee859f59_e9e55007",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_4916dcf7",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "willReturn probably is not even needed here, as its return value does not really matter. But whatever.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_04eafb73",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "I wasn\u0027t sure. If it really isn\u0027t, we may remove it, yes.",
      "parentUuid": "ee859f59_4916dcf7",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_09d77429",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "minor but you could possibly extract the whole creation of the handler to a private method, as the other test for the other enhanced change line case uses the same thing.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_e4625737",
        "filename": "client/tests/phpunit/includes/Hooks/ChangesListLinesHandlerTest.php",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "Of course, I could only have this single line:\n\n $handler \u003d $this-\u003egetHandler( ... );\n\nbut I would have to provide some arguments since the fake dependencies are different in each test case. I\u0027m afraid that would make things a bit more complicated.",
      "parentUuid": "ee859f59_09d77429",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_84e10b2c",
        "filename": "client/tests/phpunit/includes/RecentChanges/ChangeLineFormatterTest.php",
        "patchSetId": 6
      },
      "lineNbr": 238,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "This is quite nasty. All this mapping, asserts checked conditionally in loop etc. It is not immediately clear what is actually tested. But I see it is at least partly caused by how test of the \"old\" format method look like.\nCould hopefully be refactored separately. That said, I see it might be quite a tricky work.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_04919bfb",
        "filename": "client/tests/phpunit/includes/RecentChanges/ChangeLineFormatterTest.php",
        "patchSetId": 6
      },
      "lineNbr": 238,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "It is very nasty. If someone gave me a hint how I could refactor this test case, I would be glad.",
      "parentUuid": "ee859f59_84e10b2c",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_04d43b4a",
        "filename": "client/tests/phpunit/includes/RecentChanges/ChangeLineFormatterTest.php",
        "patchSetId": 6
      },
      "lineNbr": 243,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-06-15T15:22:55Z",
      "side": 1,
      "message": "Maybe it would make sense to move out generating the formatted line of the data table to a private method? Kind of feels a bit bad to do such operations in the middle of test assertions.",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee859f59_a4820fa8",
        "filename": "client/tests/phpunit/includes/RecentChanges/ChangeLineFormatterTest.php",
        "patchSetId": 6
      },
      "lineNbr": 243,
      "author": {
        "id": 2664
      },
      "writtenOn": "2017-06-15T16:11:55Z",
      "side": 1,
      "message": "I agree, something like $this-\u003ebuildFormattedLineFromData( ... ) should work. The method\u0027s documentation could then make this more clear.",
      "parentUuid": "ee859f59_04d43b4a",
      "revId": "6fb2e6871f8c1338a7a5c099d352ee69105e8d0d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}