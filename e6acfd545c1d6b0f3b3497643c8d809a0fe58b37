{
  "comments": [
    {
      "key": {
        "uuid": "3291b1a3_2320a879",
        "filename": "repo/includes/Api/EntitySavingHelper.php",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-10-01T21:51:45Z",
      "side": 0,
      "message": "I this check is fine, it\u0027s the code that sets the $baseRev that should only do that if there indeed was a based revision of the entity (not just the page).\n\nSo. Can the client know that there was no base entity? How does it determined the base revision Id to send? Can we detect whether the client was sending a base revision ID, or just the ID of the latest revision of a page that does not jet have an entity attached?",
      "revId": "e6acfd545c1d6b0f3b3497643c8d809a0fe58b37",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9437ec1_c08cfbf2",
        "filename": "repo/includes/Api/EntitySavingHelper.php",
        "patchSetId": 5
      },
      "lineNbr": 169,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-10-02T06:45:33Z",
      "side": 0,
      "message": "baserev may also be needed here.\n\nIf we are telling the API to set a label on a mediainfo entity, and since we loaded the page someone else has done so, we have an edit conflict situation if we don\u0027t use the baserevid?\n\nThus we want to be able to pass baserevid all the way down even when we don\u0027t think the entity already exists, in case it does now.\n\nOtherwise we will automatically load the latest entity revision and not detect a conflict.",
      "parentUuid": "3291b1a3_2320a879",
      "revId": "e6acfd545c1d6b0f3b3497643c8d809a0fe58b37",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    }
  ]
}