{
  "comments": [
    {
      "key": {
        "uuid": "8e23439c_4c6c1f99",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "Why does a method that\u0027s called \"getConstraints\" (note the \"s\") return a single validator that is then wrapped in an array()? Wouldn\u0027t make getValidators() make more sense here?",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_f2506162",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "All constraints are modeled by a single validator. That is the idea. The fact that ItemHandler takes an array of validators, however, is silly ince the introduction of CompositeEntityValidator. Could change that, if you want.",
      "parentUuid": "8e23439c_4c6c1f99",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_2c67a3b5",
        "filename": "repo/includes/ChangeOp/ChangeOpsMerge.php",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "This looks odd. Why not use both Item objects as parameters? Maybe there is a reason, just wondering.",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_d24b25b2",
        "filename": "repo/includes/ChangeOp/ChangeOpsMerge.php",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "Because then you would be *required* to load the item data for the thing you want to ignore, even if all we need to know is the id to ignore. Interfaces should be defined on a need-to-know basis.\n\nBut the entire notion of \"provide an id of an entity to ignore conflicts with\" is a bit awkward, I agree. If you know a better solution, let me know - I pushed this code around for a week before I settled for this.",
      "parentUuid": "8e23439c_2c67a3b5",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_cc070fcc",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "In my opinion both parameters should be of type Entity.",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_52cf152c",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "Why, exactly?",
      "parentUuid": "8e23439c_cc070fcc",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_ec040bcb",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "Why public?\n\n$ignoreConflicts sounds like a bool, $ignoreConflictsWith is better.",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_32da59ed",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "For the reason to make it public, see the follow up patch.\nI agree about the naming.\n\nBut the entire notion of \"provide an id of an entity to ignore conflicts with\" is a bit awkward, I agree. If you know a better solution, let me know - I pushed this code around for a week before I settled for this.",
      "parentUuid": "8e23439c_ec040bcb",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_6cf8fbbf",
        "filename": "repo/includes/Validators/CompositeEntityValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "Again. Personally I would either expect \"Entity $entity, Entity $ignoreConflictsWith\" or \"Entity $entity, EntityId[] $ignoreConflictsWith\".",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_f2df41d9",
        "filename": "repo/includes/Validators/CompositeEntityValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "Again: why, exactly? We don\u0027t need it. Can you think of a reasonable implementation of this interface that would require two fully loaded Entities?",
      "parentUuid": "8e23439c_6cf8fbbf",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}