{
  "comments": [
    {
      "key": {
        "uuid": "8e23439c_4c6c1f99",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "Why does a method that\u0027s called \"getConstraints\" (note the \"s\") return a single validator that is then wrapped in an array()? Wouldn\u0027t make getValidators() make more sense here?",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_f2506162",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "All constraints are modeled by a single validator. That is the idea. The fact that ItemHandler takes an array of validators, however, is silly ince the introduction of CompositeEntityValidator. Could change that, if you want.",
      "parentUuid": "8e23439c_4c6c1f99",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_c3e7d2d1",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-05T22:24:39Z",
      "side": 1,
      "message": "Don\u0027t change ItemHandler in this patch, please. ;-)\n\nMy problem is still the same. Personally, I would not expect to get a validator from a method that\u0027s called getConstraints. What\u0027s wrong with EntityValidatorProvider and getValidator?",
      "parentUuid": "8e23439c_f2506162",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_f43a86be",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-06T07:27:57Z",
      "side": 1,
      "message": "\"validator\" is the kind of thing, \"constraints\" is the thing\u0027s purpose. Mentioning the kind (class) in the name is redundant, mentioning the purpose is more informative.",
      "parentUuid": "8e23439c_c3e7d2d1",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_2c67a3b5",
        "filename": "repo/includes/ChangeOp/ChangeOpsMerge.php",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "This looks odd. Why not use both Item objects as parameters? Maybe there is a reason, just wondering.",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_d24b25b2",
        "filename": "repo/includes/ChangeOp/ChangeOpsMerge.php",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "Because then you would be *required* to load the item data for the thing you want to ignore, even if all we need to know is the id to ignore. Interfaces should be defined on a need-to-know basis.\n\nBut the entire notion of \"provide an id of an entity to ignore conflicts with\" is a bit awkward, I agree. If you know a better solution, let me know - I pushed this code around for a week before I settled for this.",
      "parentUuid": "8e23439c_2c67a3b5",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_cc070fcc",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "In my opinion both parameters should be of type Entity.",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_52cf152c",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "Why, exactly?",
      "parentUuid": "8e23439c_cc070fcc",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_e34beeca",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-05T22:24:39Z",
      "side": 1,
      "message": "Because see other comments. ;-)",
      "parentUuid": "8e23439c_52cf152c",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_ec040bcb",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "Why public?\n\n$ignoreConflicts sounds like a bool, $ignoreConflictsWith is better.",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_32da59ed",
        "filename": "repo/includes/LabelDescriptionDuplicateDetector.php",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "For the reason to make it public, see the follow up patch.\nI agree about the naming.\n\nBut the entire notion of \"provide an id of an entity to ignore conflicts with\" is a bit awkward, I agree. If you know a better solution, let me know - I pushed this code around for a week before I settled for this.",
      "parentUuid": "8e23439c_ec040bcb",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_6cf8fbbf",
        "filename": "repo/includes/Validators/CompositeEntityValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-03T08:34:58Z",
      "side": 1,
      "message": "Again. Personally I would either expect \"Entity $entity, Entity $ignoreConflictsWith\" or \"Entity $entity, EntityId[] $ignoreConflictsWith\".",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_f2df41d9",
        "filename": "repo/includes/Validators/CompositeEntityValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-05T09:31:22Z",
      "side": 1,
      "message": "Again: why, exactly? We don\u0027t need it. Can you think of a reasonable implementation of this interface that would require two fully loaded Entities?",
      "parentUuid": "8e23439c_6cf8fbbf",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_03282adb",
        "filename": "repo/includes/Validators/CompositeEntityValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-05T22:24:39Z",
      "side": 1,
      "message": "Since when does the presence of the class name \"Entity\" imply that it is fully loaded? Sorry, that\u0027s not the point here, just wondering.\n\nIt just doesn\u0027t make a lot of sense to ignore a \"conflict between an Entity and an EntityId\". I understand that you are using this as a filter. Maybe it\u0027s just the name and not the actual interface.\n\n$ignoreConflictsWith reveals a bit of the implementation the user of these methods shouldn\u0027t care about. $ignoreConflictsWith \u003d \"if you found a conflict, ignore it if the id is equal to the one I gave you\". Suggestions:\n* $dontCompareWithEntity\n* $dontCompareWith\n* $excludeEntityFromComparisons\n* $excludeEntity",
      "parentUuid": "8e23439c_f2df41d9",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_34559efc",
        "filename": "repo/includes/Validators/CompositeEntityValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-06T07:27:57Z",
      "side": 1,
      "message": "Entity is a value object. If you require it as an argument, it has to be loaded. Lazy loading is one thing that can\u0027t really be done nicely with the Value/Service approach.\n\n\"validate entity, ignoring conflicts with the entities with the following ID\" is the intent; Now let\u0027s find a good name to convey this :)\n\nIt would be nice to pass a generic filter interface instead of an entity; That doesn\u0027t allow for doing the ignoring directly in an SQL query, but then - it complicates the query, and the benefit is very small (we can just skip a handful of item ids programmatically without any performance impact).\n\nI\u0027ll poke at that.",
      "parentUuid": "8e23439c_03282adb",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_e3508e62",
        "filename": "repo/includes/Validators/SiteLinkUniquenessValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-05-05T22:24:39Z",
      "side": 1,
      "message": "Strange wrap.",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_b412ce56",
        "filename": "repo/includes/Validators/SiteLinkUniquenessValidator.php",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-05-06T07:27:57Z",
      "side": 1,
      "message": "Because the operator is on the new line? I find that a lot easier to read. Consider\n\n  bla bla bla bla bla\n      AND bla bla\n      AND bla bla bla bla bla\n\nvs\n\n  bla bla bla bla bla AND\n      bla bla AND\n      bla bla bla bla bla",
      "parentUuid": "8e23439c_e3508e62",
      "revId": "7b9a13d9665461a27413a44f814ce24aee2cf4ed",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}