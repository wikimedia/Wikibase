{
  "comments": [
    {
      "key": {
        "uuid": "1d948f3d_eaffebb9",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "Would be nice to have phpdoc @type on all of these.",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfe0f07c_c2677a63",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-14T00:20:24Z",
      "side": 1,
      "message": "I prefer not having these as I consider duplicating what is already in the constructor to be clutter.",
      "parentUuid": "1d948f3d_eaffebb9",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76ec5b92_3c5c567f",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "Would be nice to have phpdoc here – for example, $batchSpacingInSeconds sounds like it could be a float, but actually must be an int, since it’s passed into sleep(). (Well, you can pass in a float, but it’ll be truncated, which is probably not what you want.)",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "172ad462_31122289",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-14T00:20:24Z",
      "side": 1,
      "message": "Indeed. Would have added int type if we where not using ancient PHP.",
      "parentUuid": "76ec5b92_3c5c567f",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb822f4e_10232c1b",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "Might return false in case of timeout, in that case we should probably abort.",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17349450_7c8e93fe",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:26:36Z",
      "side": 1,
      "message": "The original terms rebuilding was not doing that. My general impression of it is that it is not very robust. Some stuff already improved here, not clear how much effort we should spend on that.",
      "parentUuid": "bb822f4e_10232c1b",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68b8f8ca_c235387b",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "array $itemIds",
      "range": {
        "startLine": 81,
        "startChar": 40,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50e9bf8f_287ee07e",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:26:36Z",
      "side": 1,
      "message": "No. iterable. Cannot use type hint because ancient PHP",
      "parentUuid": "68b8f8ca_c235387b",
      "range": {
        "startLine": 81,
        "startChar": 40,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "068ad91f_f8c1cba2",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:33:30Z",
      "side": 1,
      "message": "Meh. I put in array now. When I wrote this function the calling code originally passed in a generator, so it was written with iterable in mind. Which is probably still the best type for the parameter. But whatever",
      "parentUuid": "50e9bf8f_287ee07e",
      "range": {
        "startLine": 81,
        "startChar": 40,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74fa40ae_dffd2f40",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "Is this a TODO to be fixed in a later patch set of the same change or one for later?",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d60f2f6_aed6b7e5",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:26:36Z",
      "side": 1,
      "message": "This is me making explicit errors are not caught. One of those things the old code was not doing.",
      "parentUuid": "74fa40ae_dffd2f40",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b46a7530_20fc3580",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "This is a bit misleading, since as far as I can tell we’re rolling back a whole batch of items, not just the one mentioned in the error message. Perhaps there should be a commit (without wait for replication) after each saveTerms() call?",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dde75ee8_a7f4ed90",
        "filename": "repo/includes/Store/ItemTermsRebuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:26:36Z",
      "side": 1,
      "message": "Indeed. Does this whole rollback make sense to begin with? Again this logic comes from the original term rebuilding script. I\u0027m wondering if putting multiple items in a single transaction helps us if we use the new implementation.",
      "parentUuid": "b46a7530_20fc3580",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7a7b461_2004ebbb",
        "filename": "repo/maintenance/rebuildItemTerms.php",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "As far as I can tell, that’s not how the option currently works – with the default values, newItemIdIterator() won’t yield any IDs, because $id \u003c\u003d $toId is already false on the very first iteration.",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fd30180_7b4c820c",
        "filename": "repo/maintenance/rebuildItemTerms.php",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:26:36Z",
      "side": 1,
      "message": "Good catch. I refactored the comparison from \u003d to \u003c\u003d, which broke this. Always some bug if it is not tested :)",
      "parentUuid": "f7a7b461_2004ebbb",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a65652d9_9c3a3822",
        "filename": "repo/maintenance/rebuildItemTerms.php",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-14T00:20:24Z",
      "side": 1,
      "message": "And I did that refactor because there was an off by one error before. I extracted this little bit of logic now and added tests.",
      "parentUuid": "1fd30180_7b4c820c",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a7ba0d5_d0b2289f",
        "filename": "repo/maintenance/rebuildItemTerms.php",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-14T00:28:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a65652d9_9c3a3822",
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4020df8c_ca3c67e2",
        "filename": "repo/maintenance/rebuildItemTerms.php",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "Passing an exit code to error() is deprecated, we should use fatalError() instead.",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 5
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02370178_45bb76c2",
        "filename": "repo/maintenance/rebuildItemTerms.php",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4020df8c_ca3c67e2",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 5
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4b43db0_4235f5ef",
        "filename": "repo/tests/phpunit/includes/Store/ItemTermsRebuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "Item",
      "range": {
        "startLine": 108,
        "startChar": 29,
        "endLine": 108,
        "endChar": 33
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d719637b_dfa1e38a",
        "filename": "repo/tests/phpunit/includes/Store/ItemTermsRebuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4b43db0_4235f5ef",
      "range": {
        "startLine": 108,
        "startChar": 29,
        "endLine": 108,
        "endChar": 33
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "033699ea_8fdb65f2",
        "filename": "repo/tests/phpunit/includes/Store/ItemTermsRebuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "I think these can be significantly simplified using the `NewItem` helper class, for example:\n\n return NewItem::withId( \u0027Q1\u0027 )\n \t-\u003eandLabel( \u0027en\u0027, \u0027EnglishPropLabel\u0027 )\n \t-\u003eandLabel( \u0027de\u0027, \u0027GermanPropLabel\u0027 )\n \t-\u003eandLabel( \u0027nl\u0027, \u0027DutchPropLabel\u0027 )\n \t-\u003ebuild();",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 135,
        "endChar": 2
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b650ac86_c648def2",
        "filename": "repo/tests/phpunit/includes/Store/ItemTermsRebuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:26:36Z",
      "side": 1,
      "message": "That\u0027s cool",
      "parentUuid": "033699ea_8fdb65f2",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 135,
        "endChar": 2
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3ca7c09_6a346218",
        "filename": "repo/tests/phpunit/includes/Store/ItemTermsRebuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 4699
      },
      "writtenOn": "2019-05-13T15:51:00Z",
      "side": 1,
      "message": "Items",
      "range": {
        "startLine": 163,
        "startChar": 32,
        "endLine": 163,
        "endChar": 42
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66bb0373_a9d15377",
        "filename": "repo/tests/phpunit/includes/Store/ItemTermsRebuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 44
      },
      "writtenOn": "2019-05-13T23:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3ca7c09_6a346218",
      "range": {
        "startLine": 163,
        "startChar": 32,
        "endLine": 163,
        "endChar": 42
      },
      "revId": "69180f499f9ec943b2cec18a0c30c0daa8533f9f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}