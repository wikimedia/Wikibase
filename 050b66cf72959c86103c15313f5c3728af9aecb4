{
  "comments": [
    {
      "key": {
        "uuid": "cbe086a6_30ddd1ba",
        "filename": "repo/includes/Store/Sql/SqlIdGenerator.php",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 4089
      },
      "writtenOn": "2018-05-16T11:38:56Z",
      "side": 1,
      "message": "How about this:\nLets not lock it at all, but just increment and select?\n```\nUPDATE wb_id_counters SET\n  id_value \u003d @id_value :\u003d id_value+1\nWHERE id_type\u003d\u0027wikibase-item\u0027 LIMIT 1;\n\nSELECT @id_value;\n```\n\nThis way we won\u0027t have locks at all and there won\u0027t be a possibility to have this error.\n\nAs a downside - we will \"waste\" some IDs in case of invalid requests, but does it really matter? \nNow `id_value` column has type of `int(10) unsigned`, but as soon as all the modern CPUs are 64bit and PHPs integers are also 64bit, we can make it `bigint(20) unsigned` and swim in IDs for the rest of our lives :)\n\nPS: Before doing so, we need to check the transaction isolation level for Mediawiki. What is it? Who knows?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "050b66cf72959c86103c15313f5c3728af9aecb4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cb28ab2_c177c9a7",
        "filename": "repo/includes/Store/Sql/SqlIdGenerator.php",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 920
      },
      "writtenOn": "2018-05-13T21:07:29Z",
      "side": 1,
      "message": "This hard coded number scares me, is there a way to extract it from somewhere?",
      "range": {
        "startLine": 77,
        "startChar": 88,
        "endLine": 77,
        "endChar": 92
      },
      "revId": "050b66cf72959c86103c15313f5c3728af9aecb4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b7583cb_748559ef",
        "filename": "repo/includes/Store/Sql/SqlIdGenerator.php",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 4699
      },
      "writtenOn": "2018-05-14T11:41:56Z",
      "side": 1,
      "message": "$database-\u003ewasLockTimeout() seems to be equivalent for instances of DatabaseMysqlBase (and for other databases the errno will almost certainly have a different meaning anyways).",
      "parentUuid": "2cb28ab2_c177c9a7",
      "range": {
        "startLine": 77,
        "startChar": 88,
        "endLine": 77,
        "endChar": 92
      },
      "revId": "050b66cf72959c86103c15313f5c3728af9aecb4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f1ccc51_31c7724e",
        "filename": "repo/includes/Store/Sql/SqlIdGenerator.php",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 2626
      },
      "writtenOn": "2018-05-14T15:04:07Z",
      "side": 1,
      "message": "I\u0027d appreciate if the whole condition, and maybe even additionally the \"is mysql and error code is 1205\" part, were put in the private method with a name that describes what it stands for. It might be clear now, but I can say for myself I will for sure not remember what this combo of four things means in a month.",
      "parentUuid": "0b7583cb_748559ef",
      "range": {
        "startLine": 77,
        "startChar": 88,
        "endLine": 77,
        "endChar": 92
      },
      "revId": "050b66cf72959c86103c15313f5c3728af9aecb4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2df8537_e4222617",
        "filename": "repo/includes/Store/Sql/SqlIdGenerator.php",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 4699
      },
      "writtenOn": "2018-05-14T15:07:52Z",
      "side": 1,
      "message": "d\u0027oh, the comment right above this line already mentions $database-\u003ewasLockTimeout(), I didn’t notice that…\n\nStill, I don’t understand why we can’t use it? It sounds like something we should fix in core, not work around by hard-coding constants in our own codebase :/",
      "parentUuid": "0f1ccc51_31c7724e",
      "range": {
        "startLine": 77,
        "startChar": 88,
        "endLine": 77,
        "endChar": 92
      },
      "revId": "050b66cf72959c86103c15313f5c3728af9aecb4",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}