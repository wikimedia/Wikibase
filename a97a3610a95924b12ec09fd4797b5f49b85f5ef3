{
  "comments": [
    {
      "key": {
        "uuid": "Dx.fugCI",
        "filename": "DataModel/DataModel.classes.php",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "Ahh, no PSR-0 compliance makes me cry :(",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx2cicAY",
        "filename": "DataModel/DataModel.classes.php",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-06-05T18:19:37Z",
      "side": 1,
      "message": "I\u0027d like to change this all at once or not at all - more inconsistency is just plainful and confusing.",
      "parentUuid": "Dx.fugCI",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx6equBc",
        "filename": "DataModel/DataModel.classes.php",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T18:49:32Z",
      "side": 1,
      "message": "We cannot easily change this. Stuck with fail forever :(",
      "parentUuid": "Dx2cicAY",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx0f0lPA",
        "filename": "DataModel/DataModel/Entity/EntityRevision.php",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "Why not on one line?",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dxwc0TKk",
        "filename": "DataModel/DataModel/Entity/EntityRevision.php",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "Why cast to an int if it is supposed to be an int? Better to have the caller make sure it is passing what this thing needs and throw an exception if it does not. Alternatively you can update the docs and specify it can also be a string - that is somewhat less nice though.",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DxydDSBg",
        "filename": "DataModel/DataModel/Entity/EntityRevision.php",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "The int cast is something so trivial that placing it in a constructor is perhaps not a real issue. Calling wfTimestamp is however doing work, and creating tight coupling. Why would this class need to depend on MW? ... And now I realize that this is in DataModel, that certainly is a no go, since this component should be usable without MW. ... Though this class seems misplaced then, better put it in lib.",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx2dFUBc",
        "filename": "lib/includes/store/EntityRevisionLookup.php",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "Is this double function of the parameter needed? What about requiring a revision to always be given to this method?",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx8d4pPI",
        "filename": "lib/includes/store/EntityRevisionLookup.php",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-06-05T18:19:37Z",
      "side": 1,
      "message": "There has to be a way to say \"give me the latest revision\". We can either have a special int value for that (e.g. 0), or a non-int value (e.g. null or false). \n\nI don\u0027t like \"magic\" values like 0 much, so false seems appropriate.\n\nAlso, this interface should closely resembe the EntityLookup interface. I don\u0027t want to be inconsistent. \n\nWe can change this from false to 0, but in a separate change, and in both interfaces, please.",
      "parentUuid": "Dx2dFUBc",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx0dD9G8",
        "filename": "lib/includes/store/EntityRevisionLookup.php",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T18:49:32Z",
      "side": 1,
      "message": "Better leave this explicit then changing it to 0.\n\nWhat about requiring the argument and adding a getLatestRevisionOfEntity method? Decreases what this method needs to do, and a call to getLatestRevisionOfEntity( $entityId ) is a lot clearer then getEntityRevision( $entityId, false )",
      "parentUuid": "Dx8d4pPI",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx8dSZN0",
        "filename": "lib/includes/store/EntityRevisionLookup.php",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "Please do not return null on error - that is what exceptions are for. Returning null causes problems",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DxyeJiO0",
        "filename": "lib/includes/store/EntityRevisionLookup.php",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-06-05T18:19:37Z",
      "side": 1,
      "message": "If you consider \"this revision does not exist\" an error, yes. \nGenerally, I feel getters can return null if the thing they were supposed to get isn\u0027t there. That\u0027s a matter of taste, I guess.\n\nBut I believe that this interface should be consistent with the EntityLookup interface. So I wouldn\u0027t like to change this behavior here and now.",
      "parentUuid": "Dx8dSZN0",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DxycaKHg",
        "filename": "lib/includes/store/EntityRevisionLookup.php",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T18:49:32Z",
      "side": 1,
      "message": "This is not a \"getter\" under the definition of getter that I have. Anyway, I disagree with either interpretation, unless you have a getter that just returns a field that can happen to be null.\n\nThe difference between throwing an exception and returning null is not taste or cosmetic. The difference between returning null or false is ;p This causes actual problems. I\u0027ll make some presentation on the topic soonish, though can point you to a chapter in a book right now if you want to.\n\nThis is a different interface. Being consistent with problems elsewhere is a bad idea. Rather then learning from the mistake we are now bound to it? I hope not.",
      "parentUuid": "DxyeJiO0",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx6dPWDQ",
        "filename": "lib/includes/store/sql/CachingEntityLoader.php",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "?",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx6d1mPk",
        "filename": "lib/includes/store/sql/CachingEntityLoader.php",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-06-05T18:19:37Z",
      "side": 1,
      "message": "?!",
      "parentUuid": "Dx6dPWDQ",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx4cPvDc",
        "filename": "lib/includes/store/sql/CachingEntityLoader.php",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T18:49:32Z",
      "side": 1,
      "message": "~\u003d[,,_,,]:3",
      "parentUuid": "Dx6d1mPk",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DxwddbOk",
        "filename": "lib/tests/phpunit/EntityLookupTest.php",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "Instead of putting a comment here, you can pass a string to the test method so that when it fails you get it as error message, rather then needing to figure out which comment here applies to you.",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DxwdjrEY",
        "filename": "lib/tests/phpunit/EntityLookupTest.php",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-06-05T18:19:37Z",
      "side": 1,
      "message": "True. I have been meaning to get into that habit. Perhaps now is a good time :)",
      "parentUuid": "DxwddbOk",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx0dXdMk",
        "filename": "lib/tests/phpunit/MockRepository.php",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "mhhh - the return null is also bad, though I suspect I introduced that way back :)",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dxydc6Ok",
        "filename": "lib/tests/phpunit/MockRepository.php",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-06-05T17:15:23Z",
      "side": 1,
      "message": "You are already doing this here - more reason to leave it out of the constructor",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dx2dUMFI",
        "filename": "lib/tests/phpunit/MockRepository.php",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-06-05T18:19:37Z",
      "side": 1,
      "message": "Well, this isn\u0027t the only caller. And validating and normalizing input in the constructor is fine I think, as long as it doesn\u0027t introduce dependencies or delays. wfTimestamp is a bit nasty, you are right about that.-",
      "parentUuid": "Dxydc6Ok",
      "revId": "a97a3610a95924b12ec09fd4797b5f49b85f5ef3",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}