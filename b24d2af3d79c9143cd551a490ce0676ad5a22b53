{
  "comments": [
    {
      "key": {
        "uuid": "8e46e3ee_952dc88d",
        "filename": "repo/includes/Api/EditEntity.php",
        "patchSetId": 12
      },
      "lineNbr": 293,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-10T12:40:08Z",
      "side": 1,
      "message": "It feels strange to have the deserializer created here inline. I\u0027d be more happy with an EntityChangeOpProvider or some such, that has a newEntityChangeOp( $type, $data ) method. The EntityChangeOpProvider would be managed as a service, and injected into EditEntity.\n\nIntroducing EntityChangeOpProvider should be done in a separate patch, either before or after this one. \n\nNote that there is also ChangeOpFactoryProvider - oh yay, confusing names.",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_ace8b60c",
        "filename": "repo/includes/Api/EditEntity.php",
        "patchSetId": 12
      },
      "lineNbr": 293,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-03-13T09:36:42Z",
      "side": 1,
      "message": "True. Done in I594ce1de1576525c884875e28443c8836e164174 and moved this patch on top of the other one.",
      "parentUuid": "8e46e3ee_952dc88d",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_1558d834",
        "filename": "repo/includes/Api/EditEntity.php",
        "patchSetId": 12
      },
      "lineNbr": 301,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-10T12:40:08Z",
      "side": 1,
      "message": "Please encapsulate this hack, in a private method at least.",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_629635f5",
        "filename": "repo/includes/Api/EditEntity.php",
        "patchSetId": 12
      },
      "lineNbr": 301,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-03-13T17:06:56Z",
      "side": 1,
      "message": "So by introducing the ExceptionLocalizer for ChangeOpDeserializationException this code can be simply doing errorReporter-\u003edieException.\n\nMost of exceptions are not localized, so dieError will be done as ithas been done here previously.\n\nNasty bit is currently the only localized exception is the one for a case when there is no page requested to be used as a sitelink on the given site. This case is covered in SiteLinksCahngeOpDeserializer\u0027s unit tests but Api\\EditEntity tests do not cover this. Seems it is quite complex to test. Relevant part here is page name normalization done in MediaWikiSite which in test context is different than the way it is done on production, and the issue in question is not visible there. Alternative would probably be using custom site lookup in the test but this kind of spoils the idea of API module test as it would be using different service(s) than the actual class uses.\nSo this is currently not tests in this EditEntity integration-like tests and I am out of ideas here.\n\nLocalization is also done quite a hacky way by just putting \u0027wikibase-api-\u0027 before the error code of the deserialization exception. That way there is not need to change existing i18n messages but it is not very nice.",
      "parentUuid": "8e46e3ee_1558d834",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_f5cd2cbd",
        "filename": "repo/includes/ChangeOp/ChangeOpException.php",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-10T12:40:08Z",
      "side": 1,
      "message": "Encoding a message key and args in an exception isn\u0027t very nice semantically.\n\nI can see the need here, but please have a look at ExceptionLocalizer, which is used in ApiErrorReporter. That\u0027s the place where Exceptions should be mapped to messages.",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_e2dec56f",
        "filename": "repo/includes/ChangeOp/ChangeOpException.php",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-03-13T15:21:42Z",
      "side": 1,
      "message": "I think I possibly managed to avoid problem with ChangeOpException by having I24d21605045355520675f79ff293392741051301.\nThat approach is not super nice, though.",
      "parentUuid": "8e46e3ee_f5cd2cbd",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_15d3f862",
        "filename": "repo/includes/ChangeOp/Deserialization/ClaimsChangeOpDeserializer.php",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-10T12:40:08Z",
      "side": 1,
      "message": "Have a look at ExceptionLocalizer",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_82682186",
        "filename": "repo/includes/ChangeOp/Deserialization/ClaimsChangeOpDeserializer.php",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-03-13T17:06:56Z",
      "side": 1,
      "message": "I had, and I could not really see how I could use it here.\n\nOnly option I could think of would be:\n1. Get ExceptionLocalizer from WikibaseRepo to this ChangeOpDeserializer\n2. If exception during statement deserialization happens, check if it could be localized (ie. if localizer throws InvalidArgumentException)\n3. If exception was localized, use the localized message as a message of ChangeOpDeserializationException.\n\nThis could possibly work. On the other hand it seems that DeserializationException are not localized, so having it the way it is now should not change existing behaviour of the API.",
      "parentUuid": "8e46e3ee_15d3f862",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_b5c804ac",
        "filename": "repo/includes/WikibaseRepo.php",
        "patchSetId": 12
      },
      "lineNbr": 851,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-10T12:40:08Z",
      "side": 1,
      "message": "How often would this be called during a request that uses ChangeOpDeserializers?",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e46e3ee_a24f5dbf",
        "filename": "repo/includes/WikibaseRepo.php",
        "patchSetId": 12
      },
      "lineNbr": 851,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-03-13T17:06:56Z",
      "side": 1,
      "message": "With EntityChangeOpProvider this will now only be called once per deserializer-instantiating callback (ie. once for item input, once for property). I believe it still would make sense to have ItemChangeOpDeserializer and PropertyChangeOpDeserializer use the same ChangeOpDeserializerFactory instance.",
      "parentUuid": "8e46e3ee_b5c804ac",
      "revId": "b24d2af3d79c9143cd551a490ce0676ad5a22b53",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}