{
  "comments": [
    {
      "key": {
        "uuid": "0e0e73b5_180c2e3c",
        "filename": "repo/Wikibase.php",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:35:41Z",
      "side": 1,
      "message": "This string should be exactly the same as in `repo/includes/Content/EntityContentFactory.php:109`. It would be nice to have this knowledge expressed somehow. \n\nI\u0027d suggest SpecialEntityPage class constant.",
      "range": {
        "startLine": 208,
        "startChar": 17,
        "endLine": 208,
        "endChar": 29
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_18966e4f",
        "filename": "repo/Wikibase.php",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "Valid point. But I believe same thing should be done, for consistency, to all other special page entries here. And why not also to API modules, hooks etc.\n\nI don\u0027t know if this has not been done before for any particular reason? Maybe be some odd MW convention etc? Do more experienced people know? I am guessing a possible answer could be that special pages etc are rarely renamed, so why bother, but I don\u0027t know if there other reasons to why this file looks like that.\n\nI am planning to do some other change to exactly that line in EntityContentFactory, I will actually consider using a constant instead of the string literal there, thanks for suggesting.",
      "parentUuid": "0e0e73b5_180c2e3c",
      "range": {
        "startLine": 208,
        "startChar": 17,
        "endLine": 208,
        "endChar": 29
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_152637c9",
        "filename": "repo/includes/Specials/SpecialEntityPage.php",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:35:41Z",
      "side": 1,
      "message": "`(string)$subPage` and you don\u0027t need null check later.",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 17
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_f8171af0",
        "filename": "repo/includes/Specials/SpecialEntityPage.php",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "Done.\n\nIt seems that getText() in the next line makes it impossible for $id to be a null afterwards, so that check was not actually even needed (It was left over while I was refactoring a first working draft, I guess).\n\nAny way, I\u0027ve added the cast to string. It does not hurt and we cannot rely on return types as long we\u0027re not on PHP 7, I guess.",
      "parentUuid": "0e0e73b5_152637c9",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 17
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_55438f67",
        "filename": "repo/includes/Specials/SpecialEntityPage.php",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:35:41Z",
      "side": 1,
      "message": "There will be strange behavior when path like `Special:EntityPage/Q1?id\u003dQ2` is given.\n\nWhy do we need to handle both?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 50
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_9837feaa",
        "filename": "repo/includes/Specials/SpecialEntityPage.php",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "\u003e Why do we need to handle both?\n\nSo it is possible to either access the \"same\" page using /wiki/Special:EntityPage/Q1 or /w/index.php?title\u003dSpecial:EntityPage\u0026id\u003dQ1.\n\n \u003e There will be strange behavior when path like `Special:EntityPage/Q1?id\u003dQ2`\n \u003e is given.\n\nThat would also be a strange request. Strange requests results in strange behaviour, I\u0027d say :)",
      "parentUuid": "0e0e73b5_55438f67",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 50
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_f59043f3",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:00:25Z",
      "side": 1,
      "message": "Why 303, but not 301?",
      "range": {
        "startLine": 67,
        "startChar": 21,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_f8483a62",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "If I read RFC 2616 right, 303 might not perfect be either but is IMO clearly better than 301.\n\nBut 301 stands for \"Moved permanently\" which is not want resolve here.\n\nWe want to provide a simple and uniform way of generating URLs that could serve as links to entity pages, without knowing what namespace (in MW sense: \"Item:\", \"Property:\", etc) to use, and not needing to deal with foreign repository URLs when just want to having a link.\n\nSo users could just makes a link, and Wikibase would deal with all configuration (namespaces, repo URLs etc). We don\u0027t want though that users learn that pages those redirects point to are the \"right\" URLs (that 301 would lead to IMO). It might happen that repo X starts to use some custom URLs for its entities. In this case old redirects might become broken, and users would not now way. Our redirects would just be adjusted accordingly and serve the right entity pages as before.",
      "parentUuid": "0e0e73b5_f59043f3",
      "range": {
        "startLine": 67,
        "startChar": 21,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_3587fbbb",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:00:25Z",
      "side": 1,
      "message": "Provider and test coupled using this substring. It means that provider cannot be reused.\n\nIt is not critical in this case, but still makes test harder to understand.",
      "range": {
        "startLine": 72,
        "startChar": 10,
        "endLine": 72,
        "endChar": 26
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_58fbc6de",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "I agree this is not very nice. On the other hand I don\u0027t know if it would make much sense to reuse the provider in those tests.",
      "parentUuid": "0e0e73b5_3587fbbb",
      "range": {
        "startLine": 72,
        "startChar": 10,
        "endLine": 72,
        "endChar": 26
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_d5f41f52",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:00:25Z",
      "side": 1,
      "message": "The mock set up is clear but intention is unclear.\n\nI would suggest to hide it behind the method like `givenWikiWithNameAndDomainIsSetUp(\u0027foo\u0027, \u0027https://foo.wiki\u0027)`. Name is not the best, because I cannot understand what exactly these lines supposed to mean.",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 95,
        "endChar": 59
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_98d81e81",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "I\u0027ve added a brief comment why it is needed (Title core class relying on global services).",
      "parentUuid": "0e0e73b5_d5f41f52",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 95,
        "endChar": 59
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_b5ebeb76",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T10:47:01Z",
      "side": 1,
      "message": "It is not crucial, but a bit difficult to read because subject and some other sentence parts are missing. I would suggest one of:\n  * WhenExecutedThenExceptionIsThrown (here subject also but it is assumed that we speak about test case\u0027s target - SpecialEntityPage)\n  * executeMethodCalledExceptionIsThrown\n  * executeMethodThrowsException\n\nOn another topic:\nI would say that we don\u0027t actually check that exception is thrown but that certain response is returned, or, may be, that the error message is being displayed. So the test name might be: `WhenExecutedDisplaysPageWith400ResponseCode` or `WhenExecuted_BadEntityIdErrorIsDisplayed`",
      "range": {
        "startLine": 114,
        "startChar": 36,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_18330ef5",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "Well, \"execute\" was supposed to be a subject in the name of this tests (and other tests too). So it was not missing but I agree it was not the best.\nI\u0027ve switched all test names to say that \"page\" redirects, or show an error etc. It is not relevant for those tests that each special page in mediawiki has this \"execute\" method running everything.\n\nFor this particular case I also agree not focusing on the exception would be better.\n\nSo this is now called \"testGivenInvalidId_pageShowsBadEntityIdError\"",
      "parentUuid": "0e0e73b5_b5ebeb76",
      "range": {
        "startLine": 114,
        "startChar": 36,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_b5c40b12",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T10:47:01Z",
      "side": 1,
      "message": "Will it throw exception if the message record not found? If not, then I guess it would be easier to use \u0027qqx\u0027 language and assert against raw keys. \n\nOr, if you want to check that you didn\u0027t forget to add language records then I would suggest to assert against exact text (may be not exact but `contains`), but not `wfMessage( \u0027xxx\u0027 )-\u003etext()` construct.\n\nSee `\\LanguageQqx`",
      "range": {
        "startLine": 143,
        "startChar": 25,
        "endLine": 143,
        "endChar": 64
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_d8b9f62a",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-03T12:52:05Z",
      "side": 1,
      "message": "\u003e Will it throw exception if the message record not found?\n\nIt wouldn\u0027t\n\n\u003e If not,\n \u003e then I guess it would be easier to use \u0027qqx\u0027 language and assert\n \u003e against raw keys.\n \u003e \n\nGood point about using qqx language, thanks. I am happy not to use wfMessage here and in 400 Bad Entity Id error test above now.\n\n \u003e Or, if you want to check that you didn\u0027t forget to add language\n \u003e records then I would suggest to assert against exact text (may be\n \u003e not exact but `contains`), but not `wfMessage( \u0027xxx\u0027 )-\u003etext()`\n \u003e construct.\n \u003e \n\n$output in this case is a pile of HTML being a body of the special page, not only this message. That\u0027s why assertContains is used.",
      "parentUuid": "0e0e73b5_b5c40b12",
      "range": {
        "startLine": 143,
        "startChar": 25,
        "endLine": 143,
        "endChar": 64
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}