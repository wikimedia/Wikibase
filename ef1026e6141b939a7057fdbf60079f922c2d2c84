{
  "comments": [
    {
      "key": {
        "uuid": "0e0e73b5_180c2e3c",
        "filename": "repo/Wikibase.php",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:35:41Z",
      "side": 1,
      "message": "This string should be exactly the same as in `repo/includes/Content/EntityContentFactory.php:109`. It would be nice to have this knowledge expressed somehow. \n\nI\u0027d suggest SpecialEntityPage class constant.",
      "range": {
        "startLine": 208,
        "startChar": 17,
        "endLine": 208,
        "endChar": 29
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_152637c9",
        "filename": "repo/includes/Specials/SpecialEntityPage.php",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:35:41Z",
      "side": 1,
      "message": "`(string)$subPage` and you don\u0027t need null check later.",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 17
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_55438f67",
        "filename": "repo/includes/Specials/SpecialEntityPage.php",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:35:41Z",
      "side": 1,
      "message": "There will be strange behavior when path like `Special:EntityPage/Q1?id\u003dQ2` is given.\n\nWhy do we need to handle both?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 50
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_f59043f3",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:00:25Z",
      "side": 1,
      "message": "Why 303, but not 301?",
      "range": {
        "startLine": 67,
        "startChar": 21,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_3587fbbb",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:00:25Z",
      "side": 1,
      "message": "Provider and test coupled using this substring. It means that provider cannot be reused.\n\nIt is not critical in this case, but still makes test harder to understand.",
      "range": {
        "startLine": 72,
        "startChar": 10,
        "endLine": 72,
        "endChar": 26
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_d5f41f52",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T11:00:25Z",
      "side": 1,
      "message": "The mock set up is clear but intention is unclear.\n\nI would suggest to hide it behind the method like `givenWikiWithNameAndDomainIsSetUp(\u0027foo\u0027, \u0027https://foo.wiki\u0027)`. Name is not the best, because I cannot understand what exactly these lines supposed to mean.",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 95,
        "endChar": 59
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_b5ebeb76",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T10:47:01Z",
      "side": 1,
      "message": "It is not crucial, but a bit difficult to read because subject and some other sentence parts are missing. I would suggest one of:\n  * WhenExecutedThenExceptionIsThrown (here subject also but it is assumed that we speak about test case\u0027s target - SpecialEntityPage)\n  * executeMethodCalledExceptionIsThrown\n  * executeMethodThrowsException\n\nOn another topic:\nI would say that we don\u0027t actually check that exception is thrown but that certain response is returned, or, may be, that the error message is being displayed. So the test name might be: `WhenExecutedDisplaysPageWith400ResponseCode` or `WhenExecuted_BadEntityIdErrorIsDisplayed`",
      "range": {
        "startLine": 114,
        "startChar": 36,
        "endLine": 114,
        "endChar": 57
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_b5c40b12",
        "filename": "repo/tests/phpunit/includes/Specials/SpecialEntityPageTest.php",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-03T10:47:01Z",
      "side": 1,
      "message": "Will it throw exception if the message record not found? If not, then I guess it would be easier to use \u0027qqx\u0027 language and assert against raw keys. \n\nOr, if you want to check that you didn\u0027t forget to add language records then I would suggest to assert against exact text (may be not exact but `contains`), but not `wfMessage( \u0027xxx\u0027 )-\u003etext()` construct.\n\nSee `\\LanguageQqx`",
      "range": {
        "startLine": 143,
        "startChar": 25,
        "endLine": 143,
        "endChar": 64
      },
      "revId": "ef1026e6141b939a7057fdbf60079f922c2d2c84",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}