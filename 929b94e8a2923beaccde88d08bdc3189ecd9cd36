{
  "comments": [
    {
      "key": {
        "uuid": "0ebaf39b_1189e026",
        "filename": "lib/includes/formatters/WikibaseValueFormatterBuilders.php",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 33
      },
      "writtenOn": "2015-12-01T16:46:07Z",
      "side": 1,
      "message": "also, a matter of taste, but i would switch the order of the arguments, with ValueFormatter object first.",
      "revId": "929b94e8a2923beaccde88d08bdc3189ecd9cd36",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_a8109ef8",
        "filename": "lib/includes/formatters/WikibaseValueFormatterBuilders.php",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-12-02T16:55:59Z",
      "side": 1,
      "message": "Yea, but all the other methods in this class have the format first.",
      "parentUuid": "0ebaf39b_1189e026",
      "revId": "929b94e8a2923beaccde88d08bdc3189ecd9cd36",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_71a05c9b",
        "filename": "lib/includes/formatters/WikibaseValueFormatterBuilders.php",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 33
      },
      "writtenOn": "2015-12-01T16:46:07Z",
      "side": 1,
      "message": "escapingValueFormatter?",
      "revId": "929b94e8a2923beaccde88d08bdc3189ecd9cd36",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_48d9e25a",
        "filename": "lib/includes/formatters/WikibaseValueFormatterBuilders.php",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-12-02T16:55:59Z",
      "side": 1,
      "message": "That\u0027s not a verb... how about wrapValueFormatter? Or wrapValueFormatterInEscapingValueFormatterIfNeeded?",
      "parentUuid": "0ebaf39b_71a05c9b",
      "revId": "929b94e8a2923beaccde88d08bdc3189ecd9cd36",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_51b998c5",
        "filename": "lib/tests/phpunit/formatters/WikibaseValueFormatterBuildersTest.php",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 33
      },
      "writtenOn": "2015-12-01T16:46:07Z",
      "side": 1,
      "message": "it is a bit strange to apply ucfirst when the provider already has them starting with uppercase",
      "revId": "929b94e8a2923beaccde88d08bdc3189ecd9cd36",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_31c5040e",
        "filename": "lib/tests/phpunit/formatters/WikibaseValueFormatterBuildersTest.php",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 33
      },
      "writtenOn": "2015-12-01T16:56:21Z",
      "side": 1,
      "message": "i realize we do have some tests below that test the different output formats and so maybe it\u0027s enough to just assert we have a ValueFormatter instance, but i think it would be nice to assert more specifically which formatter class these are. (especially since we return the formatter object here)",
      "revId": "929b94e8a2923beaccde88d08bdc3189ecd9cd36",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_5192f84f",
        "filename": "lib/tests/phpunit/formatters/WikibaseValueFormatterBuildersTest.php",
        "patchSetId": 4
      },
      "lineNbr": 184,
      "author": {
        "id": 33
      },
      "writtenOn": "2015-12-01T16:46:07Z",
      "side": 1,
      "message": "huh, this is not using getFormatterForDataType?",
      "revId": "929b94e8a2923beaccde88d08bdc3189ecd9cd36",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}