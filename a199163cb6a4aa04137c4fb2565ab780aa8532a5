{
  "comments": [
    {
      "key": {
        "uuid": "4e7eab26_e4e4acdb",
        "filename": "lib/includes/Store/PropertyInfoStore.php",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-09-04T13:31:30Z",
      "side": 1,
      "message": "Why is this constant in the â€¦Store interface, and not in PropertyInfoProvider interface, or in the FieldPropertyInfoProvider class? Is it really *stored*, or only retrieved?",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_761aa71d",
        "filename": "lib/includes/Store/PropertyInfoStore.php",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:54:34Z",
      "side": 1,
      "message": "It\u0027s really stored. In the database. Otherwise, we would have  to load the Property Entity to find the value. Or all the Properties, to build a mapping.\n\nThat said, I don\u0027t care much where the constant lives.",
      "parentUuid": "4e7eab26_e4e4acdb",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_16cb2376",
        "filename": "lib/includes/Store/PropertyInfoStore.php",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:57:35Z",
      "side": 1,
      "message": "See https://gerrit.wikimedia.org/r/#/c/258523/1/repo/includes/PropertyInfoBuilder.php",
      "parentUuid": "4e7eab26_761aa71d",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_84f7e886",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-09-04T13:31:30Z",
      "side": 1,
      "message": "This is not helpful documentation and can as well be removed.",
      "range": {
        "startLine": 37,
        "startChar": 4,
        "endLine": 37,
        "endChar": 23
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_3662dfa3",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:54:34Z",
      "side": 1,
      "message": "should probably use wfUrlencode() instead.",
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_b60c8fef",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:54:34Z",
      "side": 1,
      "message": "This uses the SAME predicate for the URI and the string value. That will break consistency, since the predicate can either be declared an object property, or not.\n\nInstead, we have to use different predicates. we\u0027d have to have a way to derived the predicate LName for the full URI from the predicate LName for the plain value. This will require a mapping to be passed to the constructor. The mapping can be provided by RdfVocabulary.\n\nI think that is the issue this patch got stuck on.",
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_e4882ced",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-09-04T13:31:30Z",
      "side": 1,
      "message": "This is not true. It\u0027s not a full URI.",
      "range": {
        "startLine": 66,
        "startChar": 19,
        "endLine": 66,
        "endChar": 33
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_1667a3b4",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:54:34Z",
      "side": 1,
      "message": "yes, you are right, it returns the external ID (which is the URI suffix)",
      "parentUuid": "4e7eab26_e4882ced",
      "range": {
        "startLine": 66,
        "startChar": 19,
        "endLine": 66,
        "endChar": 33
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_842da8ef",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-09-04T13:31:30Z",
      "side": 1,
      "message": "Why protected? Who is going to override this?",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 10
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_9652b3dc",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 68,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:54:34Z",
      "side": 1,
      "message": "can be private, you are right.",
      "parentUuid": "4e7eab26_842da8ef",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 10
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_0419b8db",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-09-04T13:31:30Z",
      "side": 1,
      "message": "I think I complained about this trimming before. I think it is bad to do this here. This will hide errors. This should either be a validator that disallows untrimmed values, or trimming should be enforced on save.",
      "range": {
        "startLine": 69,
        "startChar": 9,
        "endLine": 69,
        "endChar": 13
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_241cf4c9",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-09-04T13:31:30Z",
      "side": 1,
      "message": "Casting a string to a string is pointless. The value you get from a StringValue object is guaranteed to be a string already.",
      "range": {
        "startLine": 69,
        "startChar": 15,
        "endLine": 69,
        "endChar": 21
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_76f387e3",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:54:34Z",
      "side": 1,
      "message": "true",
      "parentUuid": "4e7eab26_241cf4c9",
      "range": {
        "startLine": 69,
        "startChar": 15,
        "endLine": 69,
        "endChar": 21
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7eab26_f62d3741",
        "filename": "repo/includes/Rdf/Values/ExternalIdentifierRdfBuilder.php",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-09-05T15:54:34Z",
      "side": 1,
      "message": "*shrug* no strong feelings about this. seems redundant, but doesn\u0027t hurt.",
      "parentUuid": "4e7eab26_0419b8db",
      "range": {
        "startLine": 69,
        "startChar": 9,
        "endLine": 69,
        "endChar": 13
      },
      "revId": "a199163cb6a4aa04137c4fb2565ab780aa8532a5",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}