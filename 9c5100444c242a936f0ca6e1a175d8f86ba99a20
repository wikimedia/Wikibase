{
  "comments": [
    {
      "key": {
        "uuid": "2e4df70f_71b11242",
        "filename": "lib/includes/Store/Sql/TermSqlIndex.php",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-05-03T14:11:09Z",
      "side": 1,
      "message": "\"Can\" means \"is able to\", which is a weird name for a setting. I would suggest to name the two settings \"writeFullEntityIdColumn\" and \"readFullEntityIdColumn\", like it is a call to action.",
      "range": {
        "startLine": 59,
        "startChar": 10,
        "endLine": 59,
        "endChar": 17
      },
      "revId": "9c5100444c242a936f0ca6e1a175d8f86ba99a20",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_91805e4d",
        "filename": "lib/includes/Store/Sql/TermSqlIndex.php",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-05-03T14:11:09Z",
      "side": 1,
      "message": "Shouldn\u0027t this depend on both \"has\" and \"canRead\"? Because, what happens if the column is not fully populated? Will this deletion miss some rows then?",
      "range": {
        "startLine": 324,
        "startChar": 7,
        "endLine": 324,
        "endChar": 35
      },
      "revId": "9c5100444c242a936f0ca6e1a175d8f86ba99a20",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_91f7fef1",
        "filename": "lib/includes/Store/Sql/TermSqlIndex.php",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-05-03T14:11:09Z",
      "side": 1,
      "message": "Isn\u0027t it easier to make sure the numeric column is always populated, as long as it exists? Then you do not need any of these possibly expensive OR operations.",
      "range": {
        "startLine": 421,
        "startChar": 27,
        "endLine": 421,
        "endChar": 29
      },
      "revId": "9c5100444c242a936f0ca6e1a175d8f86ba99a20",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_719832c4",
        "filename": "lib/includes/Store/Sql/TermSqlIndex.php",
        "patchSetId": 1
      },
      "lineNbr": 871,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-05-03T14:11:09Z",
      "side": 1,
      "message": "The composer is for numbers only and does not support full entity ID strings. You need to use an EntityIdParser here.",
      "range": {
        "startLine": 871,
        "startChar": 35,
        "endLine": 871,
        "endChar": 50
      },
      "revId": "9c5100444c242a936f0ca6e1a175d8f86ba99a20",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_b1fc7ad6",
        "filename": "lib/tests/phpunit/Store/Sql/TermSqlIndexTest.php",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-05-03T14:11:09Z",
      "side": 1,
      "message": "Uh, this is not how an EntityIdComposer is supposed to work. Please use an EntityIdParser.",
      "revId": "9c5100444c242a936f0ca6e1a175d8f86ba99a20",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}