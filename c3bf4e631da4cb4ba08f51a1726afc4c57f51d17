{
  "comments": [
    {
      "key": {
        "uuid": "8e742343_a8cdee63",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-06-28T16:58:12Z",
      "side": 1,
      "message": "I don\u0027t think the error code should be allowed to be null. What this patch original did (before PS4) was simply using the full message key as error code. I reintroduced the previous defacto-standard of message key and error code being the same, but with the prefix \"wikibase-api-\" stripped.\n\nI think both is to much magic and should not be done. Better always require both.",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_ccc06e32",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-07-03T12:51:51Z",
      "side": 1,
      "message": "I agree. Should not be null.\n\nI can also relate to what you said about prefixing error codes with \"wikibase-api-\", but on the other hand, having `string|string[]|MessageSpecifier` as a type-hint for `$msg` and taking first element from array as a message key seems like something that brings confusion (it confused me, at least).\nI would prefer to have more \"strict\" method interface. May be introduce some Error class with the error code, message key and needed parameters and just pass it as an argument?",
      "parentUuid": "8e742343_a8cdee63",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_0cff5632",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-07-03T12:55:23Z",
      "side": 1,
      "message": "\u003e what you said about prefixing error codes with \"wikibase-api-\" […]\n\nI removed this already from PS5.\n\n\u003e taking first element from array as a message key seems like something that brings confusion […]\n\nThis is a defacto-standard from core, and not invented in this patch.",
      "parentUuid": "8e742343_ccc06e32",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_061732a9",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 221
      },
      "writtenOn": "2017-07-03T14:50:11Z",
      "side": 1,
      "message": "\u003e May be introduce some Error class with the error code, message key and needed parameters and just pass it as an argument?\n\nThe ApiMessage class already exists in core, and contains the error code, message key, and needed parameters. Don\u0027t needlessly invent your own thing again.",
      "parentUuid": "8e742343_ccc06e32",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_c7001db2",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-07-10T14:24:40Z",
      "side": 1,
      "message": "\u003e Don\u0027t needlessly invent your own thing again.\n\n`ApiMessage` extends `Message` (~1400 lines) and uses `ApiMessageTrait`(~120 lines) which means that it already has around 50 public methods (+ 7 protected methods).\nIf we add some code depending on this class we start implicitly depending on all those methods as well as external resources access (caches, etc.).\n\nAvoiding unnecessary dependency is not something that I would call \"needless\"",
      "parentUuid": "8e742343_061732a9",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_2796c14f",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-07-10T14:42:19Z",
      "side": 1,
      "message": "\"framework isolation vs avoiding duplication\" is an old issue, and a tradeoff that needs to be decided on a case by case basis. \n\nThis this class is strongly coupled to MediaWiki\u0027s API facilities anyway, I would re-use ApiMessage from core, even if it\u0027s quite heavy. If this was code in a library, or at least this class was otherwise isolated from MW stuff, I\u0027d agree with Aleksey: create a narrow interface and an adapter implementation instead of binding to the framework.",
      "parentUuid": "8e742343_c7001db2",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_47118db0",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-07-10T15:05:13Z",
      "side": 1,
      "message": "\u003e  this class was otherwise isolated from MW stuff\n\nIt would be nice if it was true and it is in our hands to do so, isn\u0027t it?\nAll we need is to start somewhere.",
      "parentUuid": "8e742343_2796c14f",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_6848e3cf",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 221
      },
      "writtenOn": "2017-07-18T15:54:20Z",
      "side": 1,
      "message": "I\u0027ll just note that it took 8 months and counting after every other extension in Gerrit was updated for the i18n change for Wikibase to be updated, thanks to the fact that you reinvented all your own stuff here and I couldn\u0027t understand it well enough to do it for you.",
      "parentUuid": "8e742343_47118db0",
      "range": {
        "startLine": 208,
        "startChar": 18,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_88d4b2ed",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-06-28T16:58:12Z",
      "side": 1,
      "message": "I kept this for now, but I think this was a mistake.",
      "range": {
        "startLine": 210,
        "startChar": 15,
        "endLine": 210,
        "endChar": 19
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_083e8226",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 224,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-06-28T16:58:12Z",
      "side": 1,
      "message": "I wonder what the actual benefit of this is. Do we plan to actually resolve all the warning that will show up? Where will they show up anyway?",
      "range": {
        "startLine": 224,
        "startChar": 3,
        "endLine": 224,
        "endChar": 9
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_ecd44aee",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 224,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-07-03T12:51:51Z",
      "side": 1,
      "message": "I think we should resolve all, but I don\u0027t know where they will show up.\nI would suggest to remove `$this-\u003ewarnOnMissingMessage` flag at all.",
      "parentUuid": "8e742343_083e8226",
      "range": {
        "startLine": 224,
        "startChar": 3,
        "endLine": 224,
        "endChar": 9
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e742343_07d4e515",
        "filename": "repo/includes/Api/ApiErrorReporter.php",
        "patchSetId": 4
      },
      "lineNbr": 224,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-07-10T14:42:19Z",
      "side": 1,
      "message": "The warnings make tests fail. This flag allows us to turn on \"strict\" behavior in tests for modules we have fully converted to new style errors. Once all modules have been converted, the flag can go.",
      "parentUuid": "8e742343_ecd44aee",
      "range": {
        "startLine": 224,
        "startChar": 3,
        "endLine": 224,
        "endChar": 9
      },
      "revId": "c3bf4e631da4cb4ba08f51a1726afc4c57f51d17",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}