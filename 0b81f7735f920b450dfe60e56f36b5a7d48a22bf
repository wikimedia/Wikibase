{
  "comments": [
    {
      "key": {
        "uuid": "0e0e73b5_8a4eae70",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-22T17:09:13Z",
      "side": 1,
      "message": "Once again, question: where does this class belong?",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_b8d30930",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T11:18:06Z",
      "side": 1,
      "message": "Wikibase\\Repo\\Specials\\HTMLForm is a good start.",
      "parentUuid": "0e0e73b5_8a4eae70",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_4a58b635",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-22T17:09:13Z",
      "side": 1,
      "message": "I guess I should create new language item for this one, shouldn\u0027t I?",
      "range": {
        "startLine": 18,
        "startChar": 21,
        "endLine": 18,
        "endChar": 49
      },
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_f8af418f",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T11:18:06Z",
      "side": 1,
      "message": "Yes, please do so.\n\nIt\u0027s not forbidden to leave it like it is, but this is confusing. The goal really should be to not have anything in the \"NewEntity\" class any more. This includes such message keys.\n\nDon\u0027t forget to remove the old keys from en.json and qqq.json, when they are not used any more.",
      "parentUuid": "0e0e73b5_4a58b635",
      "range": {
        "startLine": 18,
        "startChar": 21,
        "endLine": 18,
        "endChar": 49
      },
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_1bc7af16",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-23T14:59:28Z",
      "side": 1,
      "message": "`wikibase-newentity-aliases` is not used, so it can be deleted.\nI want to introduce new one `wikibase-aliases-edit-label`. (BTW, is this the good one? Is there a naming schema/convention?)\n\nMay be I should just replace all `wikibase-newentity-aliases` to `wikibase-aliases-edit-label` everywhere, including language files?",
      "parentUuid": "0e0e73b5_f8af418f",
      "range": {
        "startLine": 18,
        "startChar": 21,
        "endLine": 18,
        "endChar": 49
      },
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_d8b23df9",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T11:18:06Z",
      "side": 1,
      "message": "Code style issues.",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_b89ae973",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T11:18:06Z",
      "side": 1,
      "message": "Good enough for a start, but I wonder: It should be possible to have both filters and merge them somehow, shouldn\u0027t it?",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_f8162159",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-23T13:40:13Z",
      "side": 1,
      "message": "I\u0027ve decided to leave it for now, because it\u0027s not clear should I apply general filter before converting to array or after.\nLet future developers solve this problem :). And for now, just don\u0027t allow unexpected behavior.",
      "parentUuid": "0e0e73b5_b89ae973",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_9b95df44",
        "filename": "repo/includes/Specials/HTMLAliasesField.php",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T13:50:08Z",
      "side": 1,
      "message": "Sure, makes perfect sense. I just wanted to ask if you considered this, which you did. :-)",
      "parentUuid": "0e0e73b5_f8162159",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_388dd936",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T11:18:06Z",
      "side": 1,
      "message": "Overriding the constructor of a test is very, very rare. Usually one should override \"setUp\".",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_bb3783df",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-23T13:40:13Z",
      "side": 1,
      "message": "I\u0027ll remove the constructor. \nFound out that I can define default fields\u0027 values like this:\n```\n\tprotected $backupGlobals \u003d false;\n\tprotected $backupStaticAttributes \u003d false;\n```",
      "parentUuid": "0e0e73b5_388dd936",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_5b9f6762",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T13:50:08Z",
      "side": 1,
      "message": "This is better, but still weird. Why not set it in setUp?",
      "parentUuid": "0e0e73b5_bb3783df",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_dbe7d7a5",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-23T14:59:28Z",
      "side": 1,
      "message": "It happens before setUp() is being called.",
      "parentUuid": "0e0e73b5_5b9f6762",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_78a471af",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T11:18:06Z",
      "side": 1,
      "message": "Why is this needed?",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_bb10a354",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-23T13:40:13Z",
      "side": 1,
      "message": "PHPUnit by default tries to backup global variables to restore them after the test run. Because some globals contain \\Closure instances in their fields this process triggers error \"Serialization of \u0027Closure\u0027 is not allowed\" on each test run.\n\nI could extend MediaWikiTestCase instead of PHPUnit_Framework_TestCase, but I didn\u0027t want it because it\u0027s 1830 lines long and the only thing I needed from it was these two fields set to false.",
      "parentUuid": "0e0e73b5_78a471af",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_9b7cbf1c",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T13:50:08Z",
      "side": 1,
      "message": "The class under test relies on MediaWiki anyway. Instead of replicating functionality that\u0027s already there please use the existing MediaWikiTestCase. It\u0027s used in thousands of tests and well tested and maintained. Working around it is not worth it, but more likely to do us harm.",
      "parentUuid": "0e0e73b5_bb10a354",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_9b25dfbe",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-23T14:59:28Z",
      "side": 1,
      "message": "Yeah, I didn\u0027t understand that class already has a dependency on whole global magic. MediaWikiTestCase it is!",
      "parentUuid": "0e0e73b5_9b7cbf1c",
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_987cc51c",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T11:18:06Z",
      "side": 1,
      "message": "Missing newline here, and more minor spacing issues below. I believe you can run phpcs locally to check your code before uploading.",
      "range": {
        "startLine": 21,
        "startChar": 38,
        "endLine": 21,
        "endChar": 39
      },
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_9b54bf57",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 4089
      },
      "writtenOn": "2016-12-23T14:23:06Z",
      "side": 1,
      "message": "I\u0027ll fix it, but I would like to discuss the necessity of this check. I don\u0027t see anything wrong with one-line functions.",
      "parentUuid": "0e0e73b5_987cc51c",
      "range": {
        "startLine": 21,
        "startChar": 38,
        "endLine": 21,
        "endChar": 39
      },
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e0e73b5_9bd39fd7",
        "filename": "repo/tests/phpunit/includes/Specials/HTMLAliasesFieldTest.php",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1453
      },
      "writtenOn": "2016-12-23T14:33:01Z",
      "side": 1,
      "message": "This is from MediaWiki core. One instruction per line. Always the same formatting, no matter if the body is empty or not. This rule is going to stay. There are others we can talk about.",
      "parentUuid": "0e0e73b5_9b54bf57",
      "range": {
        "startLine": 21,
        "startChar": 38,
        "endLine": 21,
        "endChar": 39
      },
      "revId": "0b81f7735f920b450dfe60e56f36b5a7d48a22bf",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}