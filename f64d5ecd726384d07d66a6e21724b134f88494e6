{
  "comments": [
    {
      "key": {
        "uuid": "4e506ba4_e870f1db",
        "filename": "repo/includes/Content/ItemContent.php",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-04-10T12:35:18Z",
      "side": 1,
      "message": "Shouldn\u0027t this rather be injected? setDataTypeLookup when then also be not needed to use custom lookup in tests (as far as I see this is the only reason to have this setter).",
      "revId": "f64d5ecd726384d07d66a6e21724b134f88494e6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_15ce91b9",
        "filename": "repo/includes/Content/ItemContent.php",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 920
      },
      "writtenOn": "2017-04-10T14:54:29Z",
      "side": 1,
      "message": "I actually tried to do it but then I saw this class says the constructor should not be used directly (\"Do not use to construct new stuff from outside of this class\") so I need to pass on the PropertyDataTypeLookup object around in some  methods to get it injected properly which is not nice.",
      "parentUuid": "4e506ba4_e870f1db",
      "revId": "f64d5ecd726384d07d66a6e21724b134f88494e6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_15af7192",
        "filename": "repo/includes/Content/ItemContent.php",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-04-10T15:18:58Z",
      "side": 1,
      "message": "Oh, right, I completely missed the context here. Injecting in the constructor would not be nice here indeed.\nOh dear. I don\u0027t have a reasonable suggestion for this now.",
      "parentUuid": "4e506ba4_15ce91b9",
      "revId": "f64d5ecd726384d07d66a6e21724b134f88494e6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_35b14ddd",
        "filename": "repo/includes/Content/ItemContent.php",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-04-10T15:30:13Z",
      "side": 1,
      "message": "I propose to inject it into ItemHandler instead. ItemHandler can then expose a getIdentifierCount method, or the whole getEntityPageProperties method could be moved there.\n\nYou can get the ItemHandler by calling the getHandler() method.",
      "parentUuid": "4e506ba4_15af7192",
      "revId": "f64d5ecd726384d07d66a6e21724b134f88494e6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_9585c1a1",
        "filename": "repo/includes/Content/ItemContent.php",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 920
      },
      "writtenOn": "2017-04-10T15:58:32Z",
      "side": 1,
      "message": "hmm, It doesn\u0027t look bad but how we can inject the service to ItemHandler? It never gets constructed directly and it only works with WikibaseRepo-\u003enewItemHandler(). In production code, it\u0027s okay and super clean but in tests it becomes messy. I can think of this option: we mock WikibaseRepo that gives out ItemHandler. But I\u0027m not sure if that\u0027s the only way.",
      "parentUuid": "4e506ba4_35b14ddd",
      "revId": "f64d5ecd726384d07d66a6e21724b134f88494e6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_690a9926",
        "filename": "repo/includes/Content/ItemContent.php",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-04-11T16:28:08Z",
      "side": 1,
      "message": "If I understand correctly, the problem is that test code calls WikibaseRepo-\u003enewItemHandler() instead of constructing the ItemHandler directly. This makes it impossible to inject a mock DataTypeLookup.\n\nI would not recommend to mock WikibaseRepo. We can probably do the same we are already doing for all the other services that are injected into ItemHandler: don\u0027t mock the service, run the test with the \"live\" service.\n\nIf this is a problem for any of the tests in question, the test can be changed to call new ItemHandler instead of WikibaseRepo-\u003enewItemHandler().",
      "parentUuid": "4e506ba4_9585c1a1",
      "revId": "f64d5ecd726384d07d66a6e21724b134f88494e6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}