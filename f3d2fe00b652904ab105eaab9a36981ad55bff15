{
  "comments": [
    {
      "key": {
        "uuid": "8ef26315_81d3e304",
        "filename": "client/includes/Usage/ParserOutputUsageAccumulator.php",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 1453
      },
      "writtenOn": "2018-01-23T16:15:13Z",
      "side": 1,
      "message": "I wonder why we squish all non-deduplicated usages through this extension data de/serialization? Can we avoid this?\n\nI had a look and no, we can\u0027t, because the usages are collected step by step in an \"accumulator\". This here is the first time we do have access to the complete collection.",
      "range": {
        "startLine": 44,
        "startChar": 33,
        "endLine": 44,
        "endChar": 76
      },
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_4ce5a005",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 228
      },
      "writtenOn": "2018-01-20T20:54:25Z",
      "side": 1,
      "message": "the usecases looks like:\n( new UsageDeduplicator() )-\u003ededuplicate( $usages );\n\nif the instance isn\u0027t going to be used more than once, consider to expose it as a static function\nUsageDeduplicator::deduplicate( $usages )",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 47
      },
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_ad253baa",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 920
      },
      "writtenOn": "2018-01-22T10:14:17Z",
      "side": 1,
      "message": "Then we have to make everything static, what you say is useful when using a factory. Also it really doesn\u0027t make any difference.",
      "parentUuid": "8ef26315_4ce5a005",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 47
      },
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_be00c36e",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 228
      },
      "writtenOn": "2018-01-22T21:24:21Z",
      "side": 1,
      "message": "right",
      "parentUuid": "8ef26315_ad253baa",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 47
      },
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_ecf62cc1",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 228
      },
      "writtenOn": "2018-01-20T20:54:25Z",
      "side": 1,
      "message": "should it also de-duplicate claims? (if code access \u003c20 properties (or some other threshold) , this is probably reasonable to track all the entity claims)",
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_4d3757e0",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 920
      },
      "writtenOn": "2018-01-22T10:14:17Z",
      "side": 1,
      "message": "I\u0027d rather do it in later patches.",
      "parentUuid": "8ef26315_ecf62cc1",
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_8ce7a80c",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 228
      },
      "writtenOn": "2018-01-20T20:54:25Z",
      "side": 1,
      "message": "suggestion if length of $usages \u003e THRESHOLD return the usage with no modifier.\ne.g replace L.de, L.en, L.fa, L.he,... \u003d\u003e L",
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_2a963197",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 50
      },
      "writtenOn": "2018-01-22T06:32:49Z",
      "side": 1,
      "message": "That sounds like a good idea for a second patch, but I think it makes sense to keep this one simple for now.",
      "parentUuid": "8ef26315_8ce7a80c",
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef26315_2d32cbef",
        "filename": "client/includes/Usage/UsageDeduplicator.php",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 920
      },
      "writtenOn": "2018-01-22T10:14:17Z",
      "side": 1,
      "message": "Agreed",
      "parentUuid": "8ef26315_2a963197",
      "revId": "f3d2fe00b652904ab105eaab9a36981ad55bff15",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}