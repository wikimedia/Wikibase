{
  "comments": [
    {
      "key": {
        "uuid": "ee12ffd6_fd488f68",
        "filename": "repo/tests/phpunit/includes/Diff/EntityContentDiffViewTest.php",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-04T15:05:00Z",
      "side": 1,
      "message": "Pair of remarks:\n  * It\u0027s not critical here because case is pretty trivial, but still would be nice to have test name that tells not only what it tests but what result it expects: `testDiffingEmptyObjects_GeneratesEmptyDiff`\n  * This test is almost exactly the same as next one. I believe it would be nicer to compare to different objects but both empty.",
      "range": {
        "startLine": 33,
        "startChar": 17,
        "endLine": 33,
        "endChar": 40
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_3dd747f4",
        "filename": "repo/tests/phpunit/includes/Diff/EntityContentDiffViewTest.php",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-01-04T15:50:34Z",
      "side": 1,
      "message": "Please do not add spaces in front of your comment lines. This is very hard to read with the horizontal scrollbar.\n\nThe single, well visible assertion in this test literally means \"resulting HTML must be empty\". I don\u0027t see the value of repeating this in the function name. The contrary: I find such overly long function names hard to read. From my experience: If a test function name is that long, it is way to often confusing, misleading, or even wrong.\n\nI really don\u0027t want a \"givenThis_doingThis_expectingThis\" naming convention. Test functions should be named so that I can easily find the one I\u0027m looking for by only looking at the function names. This is a case-by-case thing, depending on the class under test and how the rest of the test class is structured.",
      "parentUuid": "ee12ffd6_fd488f68",
      "range": {
        "startLine": 33,
        "startChar": 17,
        "endLine": 33,
        "endChar": 40
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_43ffbaa7",
        "filename": "repo/tests/phpunit/includes/Diff/EntityContentDiffViewTest.php",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-04T19:04:42Z",
      "side": 1,
      "message": "Lets discuss test naming convention later. \n\nBut what really bothers me is that test says \"objectS\" but works with one. I believe either it should be changed so it will really pass different objects or should be renamed.",
      "parentUuid": "ee12ffd6_3dd747f4",
      "range": {
        "startLine": 33,
        "startChar": 17,
        "endLine": 33,
        "endChar": 40
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_3dbd0717",
        "filename": "repo/tests/phpunit/includes/Diff/EntityContentDiffViewTest.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-04T15:05:00Z",
      "side": 1,
      "message": "Similar to previous test: do we test difference between same object (sounds stupid, don\u0027t know how to put it better) or between two objects that have all properties with the same values. If second, then test should probably be changed.",
      "range": {
        "startLine": 47,
        "startChar": 57,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_3dee27b2",
        "filename": "repo/tests/phpunit/includes/Diff/EntityContentDiffViewTest.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-01-04T15:50:34Z",
      "side": 1,
      "message": "Even if I understand what you mean, my answer is no. This patch is refactoring existing code that was like this before. We could add a \"clone\" here or duplicate all the lines above, but this does not make a difference, does not make this better to read, does not cover the code better or anything.",
      "parentUuid": "ee12ffd6_3dbd0717",
      "range": {
        "startLine": 47,
        "startChar": 57,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_2365e6aa",
        "filename": "repo/tests/phpunit/includes/Diff/EntityContentDiffViewTest.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-04T19:04:42Z",
      "side": 1,
      "message": "Actually it does, because currently these two tests can be passed by following code inside `generateContentDiffBody` method:\n\n```\nif ($obj1 \u003d\u003d\u003d $obj2) {\n    return \u0027\u0027;\n}\n```\n\nin this case one of them can be safely deleted as it does not add value.\n\nAlso, refactoring is improving code and you\u0027re not obliged to preserve exactly the same behavior, especially in tests.",
      "parentUuid": "ee12ffd6_3dee27b2",
      "range": {
        "startLine": 47,
        "startChar": 57,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_63cf5e83",
        "filename": "repo/tests/phpunit/includes/Diff/EntityContentDiffViewTest.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-01-04T19:28:28Z",
      "side": 1,
      "message": "Considering what I wrote in my original commit message I really wonder why we are discussing this. It\u0027s not that I disagree that this test is weird (diffing an object with itself, and doing so twice). I\u0027m touching this code *because* it is weird. It\u0027s just that I don\u0027t see why I have to fix all this weirdness in a single patch, instead of being allowed to fix one issue after the other. Which I\u0027m doing right now. So let\u0027s move forward please.",
      "parentUuid": "ee12ffd6_2365e6aa",
      "range": {
        "startLine": 47,
        "startChar": 57,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_fd32cfbb",
        "filename": "repo/tests/phpunit/includes/Diff/EntityDiffVisualizerTest.php",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-04T15:05:00Z",
      "side": 1,
      "message": "As I see test doesn\u0027t test diffing itself, but tests visualization of EntityContentDiff object. I guess either test name or test code should be changed.",
      "range": {
        "startLine": 32,
        "startChar": 17,
        "endLine": 32,
        "endChar": 40
      },
      "revId": "ae51cea435b605293984d86aa7553c8835b87eff",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}