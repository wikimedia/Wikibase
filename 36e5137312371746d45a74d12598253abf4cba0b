{
  "comments": [
    {
      "key": {
        "uuid": "2ef897d1_0cbc09b0",
        "filename": "repo/Wikibase.php",
        "patchSetId": 20
      },
      "lineNbr": 80,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-02-08T10:14:07Z",
      "side": 1,
      "message": "Eeeek, so many globals! For wikibase repo, we use a single settings array: $wgWBRepoSettings. All this could even go into a sub-structure:\n\n  $wgWBRepoSettings[\u0027EntitySearch\u0027][\u0027UseCirrus\u0027] \u003d true.",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_1c02f2be",
        "filename": "repo/Wikibase.php",
        "patchSetId": 20
      },
      "lineNbr": 80,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "I can\u0027t do much about Cirrus globals, but I certainly can put Entity search configs under $wgWBRepoSettings",
      "parentUuid": "2ef897d1_0cbc09b0",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_7c6d662c",
        "filename": "repo/Wikibase.php",
        "patchSetId": 20
      },
      "lineNbr": 80,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:57:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ef897d1_1c02f2be",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_77590690",
        "filename": "repo/includes/Api/EntityPrefixSearchProfiles.php",
        "patchSetId": 20
      },
      "lineNbr": 2,
      "author": {
        "id": 33
      },
      "writtenOn": "2017-02-08T14:06:03Z",
      "side": 1,
      "message": "think the repo/includes/Api directory isn\u0027t the best place for this and all the other elastic / cirrus specific stuff.\n\nWe have Wikibase/Repo/Search/Elastic which might be better or maybe some place else.\n\nfor this specific file, we also have repo/config or config type stuff.",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_dc0b3ad8",
        "filename": "repo/includes/Api/EntityPrefixSearchProfiles.php",
        "patchSetId": 20
      },
      "lineNbr": 2,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "I agree it may not be the best place. I didn\u0027t think yet where to put them (want to get them working first) so suggestions welcome.",
      "parentUuid": "2ef897d1_77590690",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_178bf2c5",
        "filename": "repo/includes/Api/EntitySearchElastic.php",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 33
      },
      "writtenOn": "2017-02-08T14:25:05Z",
      "side": 1,
      "message": "can WikibasePrefixSearcher go in the constructor? maybe if $query was not part of the constructor and was passed to performSearch or something else?",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_fca8368b",
        "filename": "repo/includes/Api/EntitySearchElastic.php",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "it can, but I don\u0027t see why do it - searcher is useful only when you have a query, so why keep it around when we don\u0027t have one?",
      "parentUuid": "2ef897d1_178bf2c5",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_b7e41ea4",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 2,
      "author": {
        "id": 33
      },
      "writtenOn": "2017-02-08T14:13:29Z",
      "side": 1,
      "message": "In Wikibase, there should be a blank line above here, between the php opening tag and namespace.",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_9c9a6274",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 2,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "Done.\nWe may want to add a rule into the syntax checker for this, maybe?",
      "parentUuid": "2ef897d1_b7e41ea4",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_37e26e9d",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 23,
      "author": {
        "id": 33
      },
      "writtenOn": "2017-02-08T14:13:29Z",
      "side": 1,
      "message": "just nitpick (and I know phpstorm puts these comments here), but we generally don\u0027t include these in Wikibase. (they are clutter).\n\nIn PHPStorm, if you go to settings -\u003e editor -\u003e File and Code Templates and click the \"code\" tab, you can change the \"PHP constructor\" template stop adding the comment. :)",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_3c9fee63",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 23,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ef897d1_37e26e9d",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_77ffc631",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 28,
      "author": {
        "id": 33
      },
      "writtenOn": "2017-02-08T14:19:14Z",
      "side": 1,
      "message": "suggest we import the namespace and then just need AbstractQuery as the type hint.\n\nAlso, is this suppose to be Elastica\\Query\\AbstractQuery?\n\nalso, personal preference, I would put the AbstractQuery object as the first constructor param here.",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_9c814200",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 28,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ef897d1_77ffc631",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_57fa8a41",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 29,
      "author": {
        "id": 33
      },
      "writtenOn": "2017-02-08T14:19:14Z",
      "side": 1,
      "message": "think that this config should be injected in the constructor",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_7c7c461b",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 29,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "could you explain why? It\u0027s not hard to do it but I\u0027m not sure why.",
      "parentUuid": "2ef897d1_57fa8a41",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_fc039677",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 29,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-02-08T20:53:21Z",
      "side": 1,
      "message": "Because any access to any global state anywhere should be avoided - not at *all* cost, but with strong preference.\n\nOne reason is easier testing. The other is making all dependencies and all information flow explicit, and thus easier to discover and to debug.",
      "parentUuid": "2ef897d1_7c7c461b",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_dccd7a35",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 29,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T21:01:05Z",
      "side": 1,
      "message": "But it would be just moving it from WikibasePrefixSearcher to EntitySearchElastic. There\u0027s nowhere to inject this config from, so it should be created anyway. And testing WikibasePrefixSearcher separately from EntitySearchElastic doesn\u0027t make much sense - if PHP had private classes, it\u0027d be a private class of EntitySearchElastic. Since PHP does not, it is public, but it\u0027s really just a service class for EntitySearchElastic.",
      "parentUuid": "2ef897d1_fc039677",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_ff1948dc",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 29,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-02-08T22:25:00Z",
      "side": 1,
      "message": "EntitySearchElastic should also have this injected. In general, the refactoring strategy to get rid of global state is to push access to global state up the stack, step by step.\n\nAlso, I think it does make sense to test WikibasePrefixSearcher separately - and also to test EntitySearchElastic against a mock WikibasePrefixSearcher. Being able to do this is one of the reasons to use composition over sub-classing. Private classes actually poses a problem to unit testing - a quick search for \"junit private classes\" seems to show that it\u0027s a common issue; a common workaround is to use reflection.",
      "parentUuid": "2ef897d1_dccd7a35",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_ffc6e817",
        "filename": "repo/includes/Api/WikibasePrefixSearcher.php",
        "patchSetId": 20
      },
      "lineNbr": 29,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T22:34:39Z",
      "side": 1,
      "message": "I don\u0027t see a point of testing EntitySearchElastic against mock WikibasePrefixSearcher - they are essentially same unit, just split into two classes because they need to be implementing different APIs, one faces the Wikibase API and another the CirrusSearch searching API. Testable API is in EntitySearchElastic, WikibasePrefixSearcher is just an internal implementation detail of it which should not be visible from outside.",
      "parentUuid": "2ef897d1_ff1948dc",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_b7cd3e36",
        "filename": "repo/tests/phpunit/includes/Api/ElasticTermResultTest.php",
        "patchSetId": 20
      },
      "lineNbr": 189,
      "author": {
        "id": 33
      },
      "writtenOn": "2017-02-08T14:08:05Z",
      "side": 1,
      "message": "new BasicEntityIdParser() would work here and not need the WikibaseRepo factory here.\n\nafaik, BasicEntityIdParser only works for items and properties, but that should be okay here.",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef897d1_5ccd0a87",
        "filename": "repo/tests/phpunit/includes/Api/ElasticTermResultTest.php",
        "patchSetId": 20
      },
      "lineNbr": 189,
      "author": {
        "id": 2096
      },
      "writtenOn": "2017-02-08T20:43:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ef897d1_b7cd3e36",
      "revId": "36e5137312371746d45a74d12598253abf4cba0b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}