{
  "comments": [
    {
      "key": {
        "uuid": "ae0c87c0_6a64d7e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-06T10:30:29Z",
      "side": 1,
      "message": "Correct me if I am wrong but Depends-On is meant more for cross-project (ie. cross-repo) dependencies.\nIn a single repo for making patch depending on each other it is enough to just put two commits in a chain.\n\nAnd once If3f3768b8255c7bd87bb71e362020b86b36b88c0 has actually been merged, it is just matter of making your patch based on the up-to-date master.",
      "revId": "a82ee06928ef092b374435f318e7e9f0cd0823eb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_1c1c7c7b",
        "filename": "repo/includes/ChangeOp/ChangeOpDeserializer.php",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-05T19:40:40Z",
      "side": 1,
      "message": "That way we enforce deserializer to be able to hndle only one key.\nThis way deserializer won\u0027t be able to handle unknown keys. If it might be needed then please give an example, because I couldn\u0027t imagine a use case when you need to handle unknown keys having unknown structure.",
      "range": {
        "startLine": 19,
        "startChar": 17,
        "endLine": 19,
        "endChar": 23
      },
      "revId": "a82ee06928ef092b374435f318e7e9f0cd0823eb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_773393f4",
        "filename": "repo/includes/ChangeOp/ChangeOpDeserializer.php",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-05T19:47:00Z",
      "side": 1,
      "message": "I have a concern that it should not check validity, as soon as we want multiple implementation for this interface, but what seems invalid for one implementation might make a lot of sense for another.\n\nAnd also, we already have validation in `ChangeOp`.",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 65
      },
      "revId": "a82ee06928ef092b374435f318e7e9f0cd0823eb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0c87c0_8a094b32",
        "filename": "repo/includes/ChangeOp/ChangeOpDeserializer.php",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-01-06T10:25:29Z",
      "side": 1,
      "message": "I believe that kind of \"invalidity\" is meant here is when what is passed as $changeRequest/$changeSubRequest doesn\u0027t have a valid structure.\nIn particular the previous version would expect to get two-level array and the obvious case when the exception would be thrown would be passing [ \u0027foo\u0027 ] instead of e.g. [ \u0027label\u0027 \u003d\u003e [ ..] ].\n\nThat might become less likely if we went the way you suggest here but maybe still possible?\n\n\nChangeOp:validate is about something completely different. From method doc: \"This indicates whether this ChangeOp is valid with respect to the given entity.\"",
      "parentUuid": "ee12ffd6_773393f4",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 65
      },
      "revId": "a82ee06928ef092b374435f318e7e9f0cd0823eb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee12ffd6_3c074021",
        "filename": "repo/includes/ChangeOp/NullChangeOp.php",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-01-05T19:40:40Z",
      "side": 1,
      "message": "Don\u0027t really insist on singleton, but one can say that each new instance would waste memory. This way it won\u0027t.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 21,
        "endChar": 2
      },
      "revId": "a82ee06928ef092b374435f318e7e9f0cd0823eb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}