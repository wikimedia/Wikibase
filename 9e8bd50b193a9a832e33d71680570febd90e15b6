{
  "comments": [
    {
      "key": {
        "uuid": "0ed113e2_31c811aa",
        "filename": "repo/includes/rdf/ComplexValueRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 68,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-21T23:20:59Z",
      "side": 1,
      "message": "I think a simple array should be enough here...",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_6e1c7319",
        "filename": "repo/includes/rdf/ComplexValueRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 68,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "would work too. what would be the advantage?",
      "parentUuid": "0ed113e2_31c811aa",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_b100816e",
        "filename": "repo/includes/rdf/EntityRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 24,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Why EntityDocument? The API for RdfBuilder addEntity() only accepts Entity, so how can we get anything else into builder? If we should handle non-Entity documents, then we should handle them consistently, not?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_8e199729",
        "filename": "repo/includes/rdf/EntityRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 24,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Entity is deprecated, and should be replaced with EntityDocument everywhere. Entity exposes methods that are not guaranteed to exist for all kinds of entities in the future, or may be removed entirely. addEntity and related methods should be changed to accept EntityDocument.\n\n(I dislike the name, and I dislike the migration path, but it\u0027s true that the old Entity class exposes way too much, and needs to be changed/replaced, and the EntityDocument interface is the way we decided to do this a while back).",
      "parentUuid": "0ed113e2_b100816e",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_d138a59d",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 40,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Why we need to split flavor into booleans?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_2e166bf7",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 40,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Because it\u0027s clearer. For one thing, it makes explicit which flags have an effect on the operation of this class, and thus need to be tested.",
      "parentUuid": "0ed113e2_d138a59d",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_3147b124",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 77,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "why statement write is a sub and reference writer is not? Shouldn\u0027t it be the other way around?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_4e13af05",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 77,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "It doesn\u0027t matter at all.\nActually, I\u0027m inclined to change this now, since output order was reversed.\nPreviously, sub() output was injected at the top, now it\u0027s injected at the bottom.",
      "parentUuid": "0ed113e2_3147b124",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_31d2512d",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 166,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Do we need such function? It is only used in one place (well, two but it should be one, see below). Also, we have another getStatementLName in RdfVocabulary - why?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_0e35a742",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 166,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "a relict, should be replaced by a call to the vocab object",
      "parentUuid": "0ed113e2_31d2512d",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_f1fe09ab",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 199,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "!\u003d\u003d false looks redundant",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_aee1fbfc",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 199,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Due to PHP\u0027s interesting interpolation behavior, I have trained myself to always check against null/true/false explicitly, unless the variable is a parameter protected by a type hint which guaranteed that it\u0027s an object (or null).",
      "parentUuid": "0ed113e2_f1fe09ab",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_b1be41d0",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 225,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "We already do getStatementLName() in addStatement(), and second time here. We should either pass it here or return it from here and reuse.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_cee6bf13",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 225,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ed113e2_b1be41d0",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_710bf9d9",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 297,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "The only place referenceSeen() is called is if(), where it is compared to false. Why return $hash and not true?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_6eeb13dc",
        "filename": "repo/includes/rdf/FullStatementRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 297,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "I don\u0027t remember :) But this method is removed in a follow-up anyway, so I\u0027D like to not touch it, to avoid conflicts.",
      "parentUuid": "0ed113e2_710bf9d9",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_d12d0543",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 84,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "I still don\u0027t understand how it works that we pass vocabulary but also use it statically.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_2ef50bb6",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 84,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "How/where do we use it statically? Except for the constants, I mean.",
      "parentUuid": "0ed113e2_d12d0543",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_11138d06",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 88,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "If we moved to using common builder for whole dump with elimination of RdfSerializer, we can actually create the bag inside the builder.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_cebd5fd3",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 88,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Only if we assume we will *never* need to share it across builders. \nBut we could have a setter instead of a constructor param.",
      "parentUuid": "0ed113e2_11138d06",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_d1dc254e",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 95,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Please don\u0027t... Having API where you need to construct a whole bunch of builders before you can actually do anything is not good. Information about builders should be in the builder class, not outside.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_eebe23d1",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 95,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "They would be in a factory class. The advantage would be that RdfBuilder would have less dependencies on concrete implementations. But this isn\u0027t urgent.",
      "parentUuid": "0ed113e2_d1dc254e",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_51cfd582",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 96,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "TermsRdfBuilder has capability of getting languages list, but it seems to be ignored, is it on purpose?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_6ed2332e",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 96,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "TermsRdfBuilder can filter by language. That\u0027s implemented for future use (has been there for a long time, actually), but isn\u0027t currently used.",
      "parentUuid": "0ed113e2_51cfd582",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_b11641ab",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 118,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Wouldn\u0027t it be simpler to make $vocabulary and $propertyLookup object properties and not pass them around so many times?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_2ecc2b8c",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 118,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ed113e2_b11641ab",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_d1918553",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 138,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Why we create $simpleValueBuilder outside of the if() when we only use it in \"else\" branch?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_eea5c3b2",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 138,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "A relict from the previous structure, I\u0027ll fix it.",
      "parentUuid": "0ed113e2_d1918553",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_f1a289a3",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 144,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "ITYM \"use\"",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_0eab6787",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 144,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ed113e2_f1a289a3",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_314331b8",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 168,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Why this one is public and other new*Builder are private?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_aeafbb90",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 168,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "an oversight, fixed.",
      "parentUuid": "0ed113e2_314331b8",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_913e9d25",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 171,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Why we need to pass it a builder if it always use the same one? Why wouldn\u0027t it just create one internally?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_ceb47fe7",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 171,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Because then you can\u0027t inject a mock for testing, and the class would have a dependency on the implementation (with all of the implementation\u0027s dependencies, and so on), instead of just having a dependency on the interface.",
      "parentUuid": "0ed113e2_913e9d25",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_114aadc8",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 183,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "This is public too, so 2 public new*Builder and 2 private. A bit confusinh. Is there a reason beahind that?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_6e99d37f",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 183,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "I don\u0027t think there is :)",
      "parentUuid": "0ed113e2_114aadc8",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_71e3f9d4",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 359,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "If everything is a builder, shouldn\u0027t this be a builder too?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_8e96774e",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 359,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Yes, this builder.",
      "parentUuid": "0ed113e2_71e3f9d4",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_312a51d8",
        "filename": "repo/includes/rdf/RdfVocabulary.php",
        "patchSetId": 21
      },
      "lineNbr": 54,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "I think we should use either both http or both https. Not sure how come they\u0027re different, probably my fault. But we should check which one is right in the data and use that.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_6ef47384",
        "filename": "repo/includes/rdf/RdfVocabulary.php",
        "patchSetId": 21
      },
      "lineNbr": 54,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "This URI is completely wrong anyway, it\u0027s not even a concept URI. I wonder how it got here... Should be http://www.wikidata.org/entity/Q1985786, see TimeFormatter::CALENDAR_JULIAN",
      "parentUuid": "0ed113e2_312a51d8",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_11c94d7b",
        "filename": "repo/includes/rdf/SimpleValueRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 46,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Should be DateTimeValueCleaner in the definition probably.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_8ef19794",
        "filename": "repo/includes/rdf/SimpleValueRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 46,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ed113e2_11c94d7b",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_11770d37",
        "filename": "repo/includes/rdf/SnakValueRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 18,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Why we need this interface? As far as I can see, it is used exactly once by SimpleValueRdfBuilder.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_2eee6bb2",
        "filename": "repo/includes/rdf/SnakValueRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 18,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "To avoid dependencies on implementations where not necessary. Also, ComplexValueRdfBuilder may not be subclassing SimpleValueRdfBuilder in the future.",
      "parentUuid": "0ed113e2_11770d37",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_31eb31dd",
        "filename": "repo/includes/rdf/TermsRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "$languages ? array_flip( $languages ) : array() looks better to me.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_4eebafa0",
        "filename": "repo/includes/rdf/TermsRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "I\u0027m told to *always* use explicit checks against null or false, to avoid issues with \"surprising\" type interpolation.",
      "parentUuid": "0ed113e2_31eb31dd",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_71e1b9fa",
        "filename": "repo/includes/rdf/TermsRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 56,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Do we really need a separate function to call isset?",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_ee2f03f2",
        "filename": "repo/includes/rdf/TermsRdfBuilder.php",
        "patchSetId": 21
      },
      "lineNbr": 56,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-04-22T10:29:29Z",
      "side": 1,
      "message": "probably not.",
      "parentUuid": "0ed113e2_71e1b9fa",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_5127d50d",
        "filename": "repo/tests/phpunit/includes/rdf/ComplexValueRdfBuilderTest.php",
        "patchSetId": 21
      },
      "lineNbr": 111,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Didn\u0027t we agree to use JSON source data? Now we\u0027re moving back to programmatic building? I\u0027m confused.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed113e2_f17a89e6",
        "filename": "repo/tests/phpunit/includes/rdf/RdfBuilderTestData.php",
        "patchSetId": 21
      },
      "lineNbr": 105,
      "author": {
        "id": 2096
      },
      "writtenOn": "2015-04-22T00:28:14Z",
      "side": 1,
      "message": "Nice! I never got to actually implementing it in a consistent way, that\u0027d help when refactoring and adding new features.",
      "revId": "9e8bd50b193a9a832e33d71680570febd90e15b6",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}