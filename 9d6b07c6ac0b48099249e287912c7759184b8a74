{
  "comments": [
    {
      "key": {
        "uuid": "ae43a74e_fa3fc2d1",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-07-01T17:35:01Z",
      "side": 1,
      "message": "After reading the docs and looking at the code, I\u0027m still a bit fuzzy about what this class is responsible for exactly. Based on just looking at the code I\u0027m totally \"wtf\", and having to read this many docs to understand what a class is about is very bad.",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_5b57eb05",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-07-02T10:33:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae43a74e_fa3fc2d1",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_1a54c629",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-07-01T17:35:01Z",
      "side": 1,
      "message": "The name of this thing could be a lot better",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_35367d01",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-07-01T19:24:35Z",
      "side": 1,
      "message": "Agree. $levelsToResolve, $numberOfRecursiveLookups, $maxRecursion, $maximumRecursion, ...",
      "parentUuid": "ae43a74e_1a54c629",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_3b3e67b6",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-07-02T10:33:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae43a74e_35367d01",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_5016af4e",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-07-01T19:24:35Z",
      "side": 1,
      "message": "The current attempt definitely wins my personal \"implementation of the month\" price. I love it. (But I also love code minifying contests, you know.)\n\nWhat\u0027s wrong with simply providing the EntityLookup as a service?",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_9b4d5378",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-07-02T10:33:07Z",
      "side": 1,
      "message": "It would then only work for EntityLookup, and I would have to implement it again if I wanted to have the same functionality for an EntityRevisionLookup (e.g. for use with SpecialEntityData).",
      "parentUuid": "ae43a74e_5016af4e",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_da4d1e9d",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 64,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-07-01T17:35:01Z",
      "side": 1,
      "message": "visibility",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_7b54ef01",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 64,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-07-02T10:33:07Z",
      "side": 1,
      "message": "oops. done. can i tell phpstorm to declare visibility on methods it generates?",
      "parentUuid": "ae43a74e_da4d1e9d",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_10282780",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-07-01T19:24:35Z",
      "side": 1,
      "message": "Why does this check the presence and type of $arguments[0] when this variable is not used as the _source_ but as the _target_ of the resolving process? This should check the source, not the target.",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_1b3963cb",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-07-02T10:33:07Z",
      "side": 1,
      "message": "If the first argument of the original cause was an EntityId, we can retry by replacing that parameter. Otherwise, we give up.",
      "parentUuid": "ae43a74e_10282780",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_304a0b60",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-07-01T19:24:35Z",
      "side": 1,
      "message": "Make this a break.\n\nOr wait, that\u0027s better:\n\nif ( !isset( $arguments[0] ) || !( $arguments[0] instanceof EntityId ) {\nbreak;\n}\n$arguments[0] \u003d $ex-\u003egetRedirectTargetId();\n\nStill strange. Better check the argument first when the method starts, not in the middle of this loop. Calling the user function doesn\u0027t make sense when the argument is wrong.\n\nI understand that this allows to use this wrapper class with all methods (that don\u0027t have an EntityId as first parameter). But it\u0027s pointless to wrap this around such methods. It should be type safe and throw an exception if you use this wrong.\n\nWhich brings me back to: Please change to __construct( EntityLookup $entityLookup, $levels \u003d 1 ).",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae43a74e_1b960398",
        "filename": "lib/includes/store/EntityRedirectResolver.php",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-07-02T10:33:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae43a74e_304a0b60",
      "revId": "9d6b07c6ac0b48099249e287912c7759184b8a74",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}