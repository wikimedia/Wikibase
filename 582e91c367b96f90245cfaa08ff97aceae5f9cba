{
  "comments": [
    {
      "key": {
        "uuid": "5e490dc6_bcb6ca6c",
        "filename": "lib/includes/Store/Sql/WikiPageEntityRevisionLookup.php",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-06-29T09:36:22Z",
      "side": 1,
      "message": "This can in theory return null, if the content is suppressed. That should never be the case for the current revision, but this code is also used to load old revisions, right?\n\nLooking at the old code, it apparently just bypassed content suppression.... not good :)",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3966b59f_b64a152d",
        "filename": "lib/includes/Store/Sql/WikiPageEntityRevisionLookup.php",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-06-29T10:10:50Z",
      "side": 1,
      "message": "Good catch, I have switched to returning [ null, null ] for cases where access is forbidden in the next PS, I\u0027m not sure what that is going to affect though.\n\nThe method return doc does actually state that both can be null, so all could be fine, but as we havn\u0027t done that before now I\u0027m slightly worried.\n\nLooking at EntityRevisionLookup it states \"or null if there is no such entity\" but doesn\u0027t say anything about if access is denied, perhaps a better solution would be to throw some access exception?",
      "parentUuid": "5e490dc6_bcb6ca6c",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b56ec129_46002a95",
        "filename": "lib/includes/Store/Sql/WikiPageEntityRevisionLookup.php",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-06-29T10:43:21Z",
      "side": 1,
      "message": "Uuuuh.... this is a pretty big can of worms... \n\nAs far as I can see, returning [ null, null ] here will trigger\n\n  throw new BadRevisionException( \"No such revision found for $entityId: $revisionId\" );\n\nin line 124.\n\nThat\u0027s misleading, but probably has to be good enough for now. The code that returns [ null, null ] needs a big fat WARNING comment, and a reference to the relevant ticket. https://phabricator.wikimedia.org/T198467",
      "parentUuid": "3966b59f_b64a152d",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb265bbe_014eb290",
        "filename": "lib/includes/Store/Sql/WikiPageEntityRevisionLookup.php",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-06-29T12:12:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b56ec129_46002a95",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f807e6ec_deeba2b6",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-06-29T09:36:22Z",
      "side": 1,
      "message": "This block is not needed, PageUpdater does this, and the relevant exception will  be thrown in line 320.",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55972c05_87a9eeb9",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-06-29T12:12:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f807e6ec_deeba2b6",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40ae3e9e_1d65d2cc",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-06-29T09:36:22Z",
      "side": 1,
      "message": "This is still missing the base revision check\n\n  if ( $updater-\u003ehasEditConflict( $baseRevId ) ) {\n     throw new StorageException( Status::newFatal( \u0027edit-conflict\u0027 ) );\n  }",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0442a6dd_f94274db",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-06-29T12:12:36Z",
      "side": 1,
      "message": "Done.\n\nI hadn\u0027t done this before as the callers already appear to do this.",
      "parentUuid": "40ae3e9e_1d65d2cc",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a66b4851_adad70a9",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-06-29T12:48:04Z",
      "side": 1,
      "message": "It does, but there is a race condition between the caller doing this check and the actual insert. \nCalling hasEditConflict() prevents the race condition, since it grabs and remembers the parent revision as part of the updater\u0027s state, and then checks it within the transaction that updates the revision table. This is the main  reason for having a PageUpdater object: it acts as a CAS bracket.",
      "parentUuid": "0442a6dd_f94274db",
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2c8331f_47df46d2",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-06-29T09:17:25Z",
      "side": 1,
      "message": "Open question about how best to move this into EditEntity but pass the value through to here.\n\nAs a new flag in EntityContent? :/\nAs a new param to all of the methods?",
      "range": {
        "startLine": 303,
        "startChar": 2,
        "endLine": 310,
        "endChar": 3
      },
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9975a84b_3867c85a",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-06-29T09:36:22Z",
      "side": 1,
      "message": "For the purpose of this patch, just update the todo:\n\n  // TODO: this logic should not be in the storage layer, it\u0027s here for compatibility\n  // with 1.31 behavior. Applying the \u0027autopatrol\u0027 right should be done in the same\n  // place the \u0027bot\u0027 right is handled and passed down, perhaps via the $flags parameter.\n  // Relevant callers are EditEntity, PropertyDataTypeChanger, and ItemMergeInteractor.\n\nTo make this less awkward, $flags could become an array of strings, with B/C code for handling an int value.",
      "parentUuid": "a2c8331f_47df46d2",
      "range": {
        "startLine": 303,
        "startChar": 2,
        "endLine": 310,
        "endChar": 3
      },
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93244be9_0061b8ba",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-06-29T10:10:50Z",
      "side": 1,
      "message": "flags as an array of strings does sound much less awkward.",
      "parentUuid": "9975a84b_3867c85a",
      "range": {
        "startLine": 303,
        "startChar": 2,
        "endLine": 310,
        "endChar": 3
      },
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14477158_49bff310",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 128
      },
      "writtenOn": "2018-06-29T10:43:21Z",
      "side": 1,
      "message": "More flexible and more obvious. We need some kind of \"squishy\" interface here for passing flags. Otherwise, we either make this interface brittle by binding it to closely to the underlying mechanisms, or we can\u0027t make use of new features of the underlying mechanism.",
      "parentUuid": "93244be9_0061b8ba",
      "range": {
        "startLine": 303,
        "startChar": 2,
        "endLine": 310,
        "endChar": 3
      },
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84e4e288_d3f642d6",
        "filename": "repo/includes/Store/Sql/WikiPageEntityStore.php",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 106
      },
      "writtenOn": "2018-06-29T12:12:36Z",
      "side": 1,
      "message": "squishy flags sound great, for now I have just updated the TODO per the comment in the next PS",
      "parentUuid": "14477158_49bff310",
      "range": {
        "startLine": 303,
        "startChar": 2,
        "endLine": 310,
        "endChar": 3
      },
      "revId": "582e91c367b96f90245cfaa08ff97aceae5f9cba",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}