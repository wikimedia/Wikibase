This document describes the concept of data types as used by Wikibase.

== Overview ==
Data types in Wikibase are rather insubstantial: they are modelled by DataType objects,
but such objects do not define any functionality of themselves. They merely act as a type safe
ID for the data type.

Data types are used to declare which kinds of values can be associated with a Property in a
Snak. For each data type, the following things are defined:

* the type of DataValue to use for values
* a localized name and description of the data type
* ValueValidators that impose constraints on the allowed values
* A ValueParser for parsing user input
* Formatters for rendering values of the given type to various target formats.
* RDF mappings for representing values of the given type in RDF.


== Data Type Definitions ==
Data types are defined in the global $wgWBRepoDataTypes and $wgWBClientDataTypes arrays,
respectively. These arrays are constructed at bootstrap time in Wikibase.php resp.
WikibaseClient.php based on the information returned when including the files
WikibaseLib.datatypes.php, Wikibase.datatypes.php, and WikibaseClient.datatypes.php,
respectively.

$wgWBRepoDataTypes and $wgWBClientDataTypes are associative arrays that map data type IDs to a
data type definition record. Each such record has the following fields:
* value-type (repo and client): the data value type ID identifying the low level value type to use for this data type. Logically, the value type defines the structure of the value, while the data type defines constraints on the value.
* validator-factory-callback (repo only): a callable that acts as a factory for the list of validators that should be used to check any user supplied values of the given data type. The callable will be called without any arguments, and must return a list of ValueValidator objects.
* parser-factory-callback (repo only): a callable that acts as a factory for a ValueParser for this data type.
* formatter-factory-callback (repo and client): (PLANNED) a callable that acts as a factory for ValueFormatters for use with this data type.
* rdf-builder-factory-callback (repo only): (PLANNED) a callable that acts as a factory for DataValueRdfBuilder for use with this data type.

Extensions that wish to register a data type should use the WikibaseRepoDataTypes
resp. WikibaseClientDataTypes hooks to provide additional data type definitions.


== Programmatic Access ==
Information about data types can be accessed programmatically using the appropriate service objects.

The data type definitions themselves are wrapped by a DataTypeDefinitions object; the DataType
objects can be obtained from the DataTypeFactory service available via the getDataTypeFactory()
method on WikibaseRepo and WikibaseClient.

WikibaseRepo also defines the method getDataTypeValidatorFactory() which returns a
DataTypeValidatorFactory for obtaining the validators for each data type.


== Caveats ==
* the Methods getSnakFormatterFactory() does not yet use $wgWikibaseDataTypeDefinitions.
* RDF mappings for the different data types are still hardcoded.
