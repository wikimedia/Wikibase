{
  "comments": [
    {
      "key": {
        "uuid": "ce061b56_059a16bd",
        "filename": "lib/includes/Units/BaseUnitStorage.php",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 128
      },
      "writtenOn": "2016-07-12T20:48:55Z",
      "side": 1,
      "message": "I\u0027s still prefer a getter that triggers the lazy loading. Do you want to save fcalls? Is this method that much of a hotspot?",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_887d7de7",
        "filename": "lib/includes/Units/BaseUnitStorage.php",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 2096
      },
      "writtenOn": "2016-07-12T22:20:10Z",
      "side": 1,
      "message": "it\u0027s used in dump... so I\u0027m kind of nervous about adding too much stuff, since this will be used many times. Maybe I\u0027m too paranoid :)",
      "parentUuid": "ce061b56_059a16bd",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_25baba1e",
        "filename": "lib/includes/Units/BaseUnitStorage.php",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 128
      },
      "writtenOn": "2016-07-12T20:48:55Z",
      "side": 1,
      "message": "should this also check if the factor is one? what if it isn\u0027t?",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_2821f1f6",
        "filename": "lib/includes/Units/BaseUnitStorage.php",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 2096
      },
      "writtenOn": "2016-07-12T22:20:10Z",
      "side": 1,
      "message": "I don\u0027t think so. If it\u0027s not one it makes no sense, but I think ignoring it is OK.",
      "parentUuid": "ce061b56_25baba1e",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_a21b4081",
        "filename": "lib/tests/phpunit/Units/testunits.json",
        "patchSetId": 9
      },
      "lineNbr": 3,
      "author": {
        "id": 128
      },
      "writtenOn": "2016-07-12T20:38:18Z",
      "side": 1,
      "message": "I\u0027d really like fiend names here. JSON is supposed to be human editable, and we are likely to get more fields, at least an offset, maybe a dimension, or an exponent. Optional fields would be nice.",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_6882d9ce",
        "filename": "lib/tests/phpunit/Units/testunits.json",
        "patchSetId": 9
      },
      "lineNbr": 3,
      "author": {
        "id": 2096
      },
      "writtenOn": "2016-07-12T22:20:10Z",
      "side": 1,
      "message": "you mean accepting both [1, \u0027Q2\u0027] and [\u0027multiplier\u0027: 1, \u0027unit\u0027: \u0027Q2\u0027]? It\u0027s possible I guess.",
      "parentUuid": "ce061b56_a21b4081",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_c505ae15",
        "filename": "repo/includes/Rdf/Values/QuantityRdfBuilder.php",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 128
      },
      "writtenOn": "2016-07-12T20:44:27Z",
      "side": 1,
      "message": "UnitConverter|null",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_053df6b8",
        "filename": "repo/includes/Rdf/Values/QuantityRdfBuilder.php",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 128
      },
      "writtenOn": "2016-07-12T20:44:27Z",
      "side": 1,
      "message": "this needs an entry in docs/ontology.owl i think",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_08718d0b",
        "filename": "repo/includes/Rdf/Values/QuantityRdfBuilder.php",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 2096
      },
      "writtenOn": "2016-07-12T22:20:10Z",
      "side": 1,
      "message": "you are correct, adding",
      "parentUuid": "ce061b56_053df6b8",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_c553ee18",
        "filename": "repo/includes/Rdf/Values/QuantityRdfBuilder.php",
        "patchSetId": 9
      },
      "lineNbr": 122,
      "author": {
        "id": 128
      },
      "writtenOn": "2016-07-12T20:44:27Z",
      "side": 1,
      "message": "do we really need the self-reference here?",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce061b56_c85e657b",
        "filename": "repo/includes/Rdf/Values/QuantityRdfBuilder.php",
        "patchSetId": 9
      },
      "lineNbr": 122,
      "author": {
        "id": 2096
      },
      "writtenOn": "2016-07-12T22:20:10Z",
      "side": 1,
      "message": "well, it makes easier to query stuff as SPARQL doesn\u0027t really do if\u0027s and other conditionals that well. It\u0027s much easier to say \"give me all normalized values\" than \"give me normalized values for those who have them and non-normalized values for those who do not\". It would create some extra triples but storage size is not that huge issue for us now.",
      "parentUuid": "ce061b56_c553ee18",
      "revId": "010d3d9f6b270ad90d45f0cc281006710fffebf0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}