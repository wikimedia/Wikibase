{
  "comments": [
    {
      "key": {
        "uuid": "adad5ebf_e7313483",
        "filename": "repo/includes/SummaryFormatter.php",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 34
      },
      "writtenOn": "2018-06-16T01:31:07Z",
      "side": 1,
      "message": "The summary seem to be limited in terms of database storage (767 bytes). While not the number passed here, it seems desirable not to allow this to pass even if somehow the SUMMARY_MAX_LENGTH is capable of reaching 767 in bytes with its number of characters. Right?",
      "range": {
        "startLine": 263,
        "startChar": 26,
        "endLine": 263,
        "endChar": 43
      },
      "revId": "ca1d29fc2a361fb8939ef98d65d5dab84fc3c14e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd61a607_38ca055e",
        "filename": "repo/includes/SummaryFormatter.php",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 664
      },
      "writtenOn": "2018-06-20T16:14:09Z",
      "side": 1,
      "message": "Huh, that might be a larger API issue.  The summary is used in a CommentStore, and so SUMMARY_MAX_LENGTH must \u003c\u003d COMMENT_CHARACTER_LIMIT (which is 500 characters), which in turn needs to be \u003c\u003d MAX_COMMENT_LENGTH (65535 *bytes*), and there\u0027s a comment that 4*COMMENT_CHARACTER_LIMIT \u003c\u003d MAX_COMMENT_LENGTH due to UTF-8 encoding.\n\nSo maybe we need SUMMARY_CHARACTER_LIMIT (250 *characters*) and SUMMARY_MAX_LENGTH (767 *bytes*) and do a double truncation, since 4*SUMMARY_CHARACTER_LIMIT \u003e SUMMARY_MAX_LENGTH?\n\nOr maybe the database storage should be increased to 1000 bytes.  Where does the 767 number come from, exactly?",
      "parentUuid": "adad5ebf_e7313483",
      "range": {
        "startLine": 263,
        "startChar": 26,
        "endLine": 263,
        "endChar": 43
      },
      "revId": "ca1d29fc2a361fb8939ef98d65d5dab84fc3c14e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d56dc88a_5563664e",
        "filename": "repo/includes/SummaryFormatter.php",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 34
      },
      "writtenOn": "2018-06-22T15:10:42Z",
      "side": 1,
      "message": "I do not know, sorry :) You might want to ask Brad (either on this commit or on a commit more specific to core/api).",
      "parentUuid": "dd61a607_38ca055e",
      "range": {
        "startLine": 263,
        "startChar": 26,
        "endLine": 263,
        "endChar": 43
      },
      "revId": "ca1d29fc2a361fb8939ef98d65d5dab84fc3c14e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "944275e9_b03120c2",
        "filename": "repo/includes/SummaryFormatter.php",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 221
      },
      "writtenOn": "2018-07-02T19:36:54Z",
      "side": 1,
      "message": "Database storage of comments in core tables on WMF wikis has two aspects: the old fields have a limit of 255 bytes, while the new comment table has a limit of 65535 bytes.\n\nFor MediaWiki more generally, there was a patch (I8558e80a) that had updated the old fields to 767 bytes, but that was never deployed to WMF wikis.\n\nIf the string returned here is eventually being passed to CommentStore for insertion into the database, the best thing would be to follow the lead of I92954c92 and let CommentStore do the truncation. If it\u0027s being inserted into some Wikibase-specific table (I don\u0027t see any such table at a quick grep), then the truncation should match the limits of that table (and that table should probably eventually be updated to use the comment table too).",
      "parentUuid": "d56dc88a_5563664e",
      "range": {
        "startLine": 263,
        "startChar": 26,
        "endLine": 263,
        "endChar": 43
      },
      "revId": "ca1d29fc2a361fb8939ef98d65d5dab84fc3c14e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "140f9a11_f866ae27",
        "filename": "repo/includes/SummaryFormatter.php",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 664
      },
      "writtenOn": "2018-07-02T20:32:39Z",
      "side": 1,
      "message": "Ok, I tried to chase down where the summary goes after it is returned here (or more precisely, after SummaryFormatter::formatSummary() is called).\n\nSubmitEntityAction.php calls $page-\u003edoEditContent(...$summary...) which is going to pass it to CommentStoreComment::newUnsavedComment($summary)\n\nEntitySavingHelper.php calls $editEntityHandler-\u003eattemptSave( ... $summary ... )\n\nItemMergeInteractor.php calls $entityStore-\u003esaveEntity( ... $summary ... )\n\nRedirectCreationInteractor.php calls $entityStore-\u003esaveRedirect( ... $summary ... )\n\nSpecialWikibaseRepoPage.pp calls $this-\u003eeditEntity-\u003eattemptSave( ... $summary ... )\n\nUpdateRepoJob.php calls $editEntity-\u003eattemptSave( ... $summary ... )\n\nAnomie -- do these uses seem like they will all bottom out in the appropriate truncation in CommentStore?",
      "parentUuid": "944275e9_b03120c2",
      "range": {
        "startLine": 263,
        "startChar": 26,
        "endLine": 263,
        "endChar": 43
      },
      "revId": "ca1d29fc2a361fb8939ef98d65d5dab84fc3c14e",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}