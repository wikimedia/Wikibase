{
  "comments": [
    {
      "key": {
        "uuid": "cee8db29_71d7d7c4",
        "filename": "repo/includes/Hooks/LinkBeginHookHandler.php",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 562
      },
      "writtenOn": "2017-12-19T10:34:23Z",
      "side": 1,
      "message": "The variable $labelLang is documented as type Language. Should the variable $labelText documented as HtmlArmor|string because it now supports the type HtmlArmor, too?",
      "range": {
        "startLine": 388,
        "startChar": 2,
        "endLine": 388,
        "endChar": 33
      },
      "revId": "4f4fd4b89776e400ac743cd20ef2cfba282cf040",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cee8db29_ac7aa81d",
        "filename": "repo/includes/Hooks/LinkBeginHookHandler.php",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-12-19T12:42:32Z",
      "side": 1,
      "message": "Even if this is technically correct, such an inline /** @var HtmlArmor|string $labelText */ does not do anything at this point. It will not be exposed anywhere, nor will it make the code below more safe. It will be more cruft than anything. Let\u0027s please not add this.",
      "parentUuid": "cee8db29_71d7d7c4",
      "range": {
        "startLine": 388,
        "startChar": 2,
        "endLine": 388,
        "endChar": 33
      },
      "revId": "4f4fd4b89776e400ac743cd20ef2cfba282cf040",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cee8db29_4c6e7c2b",
        "filename": "repo/includes/Hooks/LinkBeginHookHandler.php",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 562
      },
      "writtenOn": "2017-12-19T13:22:44Z",
      "side": 1,
      "message": "When this comment is useless then the comment for $labelLang is also useless.",
      "parentUuid": "cee8db29_ac7aa81d",
      "range": {
        "startLine": 388,
        "startChar": 2,
        "endLine": 388,
        "endChar": 33
      },
      "revId": "4f4fd4b89776e400ac743cd20ef2cfba282cf040",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cee8db29_6c29c09a",
        "filename": "repo/includes/Hooks/LinkBeginHookHandler.php",
        "patchSetId": 3
      },
      "lineNbr": 388,
      "author": {
        "id": 1453
      },
      "writtenOn": "2017-12-19T14:10:13Z",
      "side": 1,
      "message": "No, it\u0027s not. Below are calls to $labelLang-\u003eâ€¦ methods. These calls would be marked as calls to unknown methods without the type being specified here.\n\nThe reason for this behavior is because extractTextAndLanguage can not properly specify it\u0027s own return types. No tool can know what the type of the two elements in the list is.\n\n$labelText is not an object, just a string. Nothing bad happens when you pass this into htmlspecialchars or HtmlArmor::getHtml. The worst thing that can happen is a magic __toString cast, which is usually not marked as being problematic by static analysis tools.",
      "parentUuid": "cee8db29_4c6e7c2b",
      "range": {
        "startLine": 388,
        "startChar": 2,
        "endLine": 388,
        "endChar": 33
      },
      "revId": "4f4fd4b89776e400ac743cd20ef2cfba282cf040",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}