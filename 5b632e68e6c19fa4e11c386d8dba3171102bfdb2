{
  "comments": [
    {
      "key": {
        "uuid": "c95d3502_9feb74dd",
        "filename": "client/includes/WikibaseClient.php",
        "patchSetId": 23
      },
      "lineNbr": 111,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "Can\u0027t the empty options object not be omitted?",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_3fe42810",
        "filename": "lib/includes/ReferencedEntitiesFinder.php",
        "patchSetId": 23
      },
      "lineNbr": 48,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "How can that happen? $snakValue will always be an instance of DataValue, no? And EntityId isn\u0027t?...",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_5fe1dcfe",
        "filename": "lib/includes/Validators/EntityExistsValidator.php",
        "patchSetId": 23
      },
      "lineNbr": 39,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "Should be EntityId|EntityIdValue",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_7ec4e961",
        "filename": "lib/includes/formatters/EntityIdFormatter.php",
        "patchSetId": 23
      },
      "lineNbr": 24,
      "author": {
        "id": 247
      },
      "writtenOn": "2013-08-27T15:59:53Z",
      "side": 1,
      "message": "why is this still around?",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_9fa7f4a9",
        "filename": "lib/includes/formatters/EntityIdFormatter.php",
        "patchSetId": 23
      },
      "lineNbr": 24,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-08-28T12:14:14Z",
      "side": 1,
      "message": "Because usage of it has not been removed everywhere yet",
      "parentUuid": "c95d3502_7ec4e961",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_7feea0ef",
        "filename": "lib/includes/formatters/EntityIdFormatter.php",
        "patchSetId": 23
      },
      "lineNbr": 32,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "EntityId|EntityIdValue",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_bf2e7842",
        "filename": "lib/includes/formatters/EntityIdLabelFormatter.php",
        "patchSetId": 23
      },
      "lineNbr": 83,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "Should be EntityIdValue|EntityId, not \"mixed\"",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_1f2e8441",
        "filename": "lib/includes/parsers/EntityIdParser.php",
        "patchSetId": 23
      },
      "lineNbr": 41,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "The split of BasicEntityIdParser vs EntityIdParser still confuses me, especially the fact that the two are not related/compatible. Why is this needed?",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_1e968d4b",
        "filename": "lib/includes/store/sql/SiteLinkTable.php",
        "patchSetId": 23
      },
      "lineNbr": 198,
      "author": {
        "id": 247
      },
      "writtenOn": "2013-08-27T15:59:53Z",
      "side": 1,
      "message": "unsure about this",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_ffae3081",
        "filename": "lib/includes/store/sql/SiteLinkTable.php",
        "patchSetId": 23
      },
      "lineNbr": 198,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-08-28T12:14:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c95d3502_1e968d4b",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_7f1dc00a",
        "filename": "lib/includes/store/sql/SiteLinkTable.php",
        "patchSetId": 23
      },
      "lineNbr": 198,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "yea, the constructor should just accept an int. or we make an extra pseudo-constructor. Could be done in a follow-up, but this change already touches all the relevant code. Finding all the relevant places later is going to be a pain...",
      "parentUuid": "c95d3502_1e968d4b",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_9f1a9412",
        "filename": "lib/includes/store/sql/TermSqlIndex.php",
        "patchSetId": 23
      },
      "lineNbr": 652,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "Shouldn\u0027t this use LecayIdInterpreter::newIdFromTypeAndNumber?\nConstructing an EntityId from a given type and numeric ID is the typical case when we read info from the database. It seems very odd to me that this should be so awkward. There really ought to be a straight forward way to do this.",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_dfd40c20",
        "filename": "lib/resources/jquery.valueview.experts.wikibase/experts.wikibase.EntityIdInput.js",
        "patchSetId": 23
      },
      "lineNbr": 11,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "This is the third place where this map is defined. That seems bad.",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_ffd9d054",
        "filename": "lib/resources/jquery.valueview.experts.wikibase/experts.wikibase.EntityIdValue.js",
        "patchSetId": 23
      },
      "lineNbr": 13,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "again?!",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_fede393a",
        "filename": "lib/resources/parsers/EntityIdParser.js",
        "patchSetId": 23
      },
      "lineNbr": 42,
      "author": {
        "id": 247
      },
      "writtenOn": "2013-08-27T15:44:08Z",
      "side": 1,
      "message": "why not toUpper?",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_1fb4c4ce",
        "filename": "lib/resources/parsers/EntityIdParser.js",
        "patchSetId": 23
      },
      "lineNbr": 42,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-08-28T12:14:14Z",
      "side": 1,
      "message": "well, like we agreed upon, this really does not matter.",
      "parentUuid": "c95d3502_fede393a",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_3ee19100",
        "filename": "lib/tests/phpunit/EntityLookupTest.php",
        "patchSetId": 23
      },
      "lineNbr": 197,
      "author": {
        "id": 247
      },
      "writtenOn": "2013-08-27T15:44:08Z",
      "side": 1,
      "message": "why is the P capitalized?",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_3fc9885c",
        "filename": "lib/tests/phpunit/EntityLookupTest.php",
        "patchSetId": 23
      },
      "lineNbr": 197,
      "author": {
        "id": 44
      },
      "writtenOn": "2013-08-28T12:14:14Z",
      "side": 1,
      "message": "why would it not be?",
      "parentUuid": "c95d3502_3ee19100",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_ff0f10e0",
        "filename": "lib/tests/phpunit/EntityLookupTest.php",
        "patchSetId": 23
      },
      "lineNbr": 197,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "I suppose because we agreed to use upper case prefixed to be consistent with page titles.\n\nBUT: perhaps the test should also test lookups using lower-case IDs.",
      "parentUuid": "c95d3502_3ee19100",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_5ff71cd2",
        "filename": "lib/tests/phpunit/MockRepository.php",
        "patchSetId": 23
      },
      "lineNbr": 212,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "Seeing the knowledge about prefixes hardcoded all over the place makes my skin crawl... Wouldn\u0027t it be easiest to allow ItemId to accept an integer as well as a prefixed string?",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c95d3502_ffb2b004",
        "filename": "lib/tests/phpunit/serializers/SiteLinkSerializerTest.php",
        "patchSetId": 23
      },
      "lineNbr": 129,
      "author": {
        "id": 128
      },
      "writtenOn": "2013-08-28T14:44:23Z",
      "side": 1,
      "message": "can\u0027t we just omit the options?",
      "revId": "5b632e68e6c19fa4e11c386d8dba3171102bfdb2",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}