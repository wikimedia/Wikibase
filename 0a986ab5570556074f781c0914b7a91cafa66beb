{
  "comments": [
    {
      "key": {
        "uuid": "488f94ed_c27c8b22",
        "filename": "repo/includes/Api/TypeDispatchingEntitySearchHelper.php",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 2626
      },
      "writtenOn": "2018-04-09T15:50:14Z",
      "side": 1,
      "message": "Having WebRequest here is not really making me happy. Not sure what would be an alternative though. I guess moving it to some kind of entity search helper factory, that produces the object for the given web request might be an option, but is not beautiful either.\n\nAny other ideas that could be applied here?",
      "revId": "0a986ab5570556074f781c0914b7a91cafa66beb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bb84141_523e9a6f",
        "filename": "repo/includes/Api/TypeDispatchingEntitySearchHelper.php",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 2096
      },
      "writtenOn": "2018-04-09T17:59:14Z",
      "side": 1,
      "message": "The reason WebRequest is there is that we have debug options for Cirrus search that depend on request variables. I know this is not idea, especially given the fact that this particular detail infects the upper layers, but I am not sure how to avoid this as for now. Generally, we need the way to pass request information (mainly parameters) to the search layer for it to be able to control the behavior. We could switch to using \\RequestContext::getMain()-\u003egetRequest() inside the specific handlers that need it if you think it is preferable. This is using global state though which makes it less testable. If you have any other ideas please share.",
      "parentUuid": "488f94ed_c27c8b22",
      "revId": "0a986ab5570556074f781c0914b7a91cafa66beb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5168dd_f1128080",
        "filename": "repo/includes/Api/TypeDispatchingEntitySearchHelper.php",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 2626
      },
      "writtenOn": "2018-04-13T08:39:30Z",
      "side": 1,
      "message": "Nah, that would be less nice. I\u0027m fine with this solution here, it\u0027s the best we can have for now I believe. I was simply thinking out loud or so.",
      "parentUuid": "4bb84141_523e9a6f",
      "revId": "0a986ab5570556074f781c0914b7a91cafa66beb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23e3554c_34d4a4ca",
        "filename": "repo/includes/Api/TypeDispatchingEntitySearchHelper.php",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 2626
      },
      "writtenOn": "2018-04-09T15:50:14Z",
      "side": 1,
      "message": "Given how this class is used I guess it might not be an issue in practice, but I believe one could argue that we would prefer to only have single instance of per-entity-type helper when this method is called multiple times. Currently it would create a new instance on each call.",
      "revId": "0a986ab5570556074f781c0914b7a91cafa66beb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad1c4cd6_708b29d5",
        "filename": "repo/includes/Api/TypeDispatchingEntitySearchHelper.php",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 2096
      },
      "writtenOn": "2018-04-09T17:53:53Z",
      "side": 1,
      "message": "Isn\u0027t that how the callbacks are supposed to work? We could redesign the callbacks system to involve caching layer or introduce a caching layer somewhere here, but that\u0027s not the purpose of this patch. Also, persisting handlers means we will have to reset the state (e.g. search context, request context, etc.) each time - which potentially can make it more time-consuming than creating a new handler class each time. I am not sure we could actually save that much by caching the handler - the object is pretty small. What is the reason for having single instance as opposed to instance per request? BTW, I don\u0027t think we even have a code path that can run more than one getRankedSearchResults per request, do we?",
      "parentUuid": "23e3554c_34d4a4ca",
      "revId": "0a986ab5570556074f781c0914b7a91cafa66beb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7faef9_81e49d53",
        "filename": "repo/includes/Api/TypeDispatchingEntitySearchHelper.php",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 2626
      },
      "writtenOn": "2018-04-13T12:18:14Z",
      "side": 1,
      "message": "Yup, I am not sure/don\u0027t know if this is called multiple times in a request, and as long as it is not, that would be more theoretical discussion. So fine for me like it is now.",
      "parentUuid": "ad1c4cd6_708b29d5",
      "revId": "0a986ab5570556074f781c0914b7a91cafa66beb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}