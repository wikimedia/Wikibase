<?php

namespace Wikibase;

/**
 * File defining the hook handlers for the WikibaseLib extension.
 *
 * @since 0.1
 *
 * @licence GNU GPL v2+
 * @author Jeroen De Dauw < jeroendedauw@gmail.com >
 * @author Daniel Werner < daniel.a.r.werner@gmail.com >
 * @author H. Snater < mediawiki@snater.com >
 */
final class LibHooks {

	public static function registerExtension() {
		global $wgExtensionCredits, $wgJobClasses, $wgHooks, $wgResourceModules, $wgMessagesDirs;

		if ( defined( 'WBL_VERSION' ) ) {
			// Do not initialize more than once.
			return 1;
		}

		define( 'WBL_VERSION', '0.5 alpha'
			. ( defined( 'WB_EXPERIMENTAL_FEATURES' ) && WB_EXPERIMENTAL_FEATURES ? '/experimental' : '' ) );

		// This is the path to the autoloader generated by composer in case of a composer install.
		if ( ( !defined( 'WIKIBASE_DATAMODEL_VERSION' ) || !defined( 'Diff_VERSION' ) || !defined( 'DATAVALUES_VERSION' ) )
			&& file_exists( __DIR__ . '/../vendor/autoload.php' ) ) {
			include_once( __DIR__ . '/../vendor/autoload.php' );
		}

		$wgExtensionCredits['wikibase'][] = array(
			'path' => __DIR__,
			'name' => 'WikibaseLib',
			'version' => WBL_VERSION,
			'author' => array(
				'The Wikidata team', // TODO: link?
			),
			'url' => 'https://www.mediawiki.org/wiki/Extension:WikibaseLib',
			'descriptionmsg' => 'wikibase-lib-desc'
		);

		define( 'SUMMARY_MAX_LENGTH', 250 );



		/**
		 * Called when generating the extensions credits, use this to change the tables headers.
		 * @see https://www.mediawiki.org/wiki/Manual:Hooks/ExtensionTypes
		 *
		 * @since 0.1
		 *
		 * @param array &$extensionTypes
		 *
		 * @return boolean
		 */
		$wgHooks['ExtensionTypes'][] = function( array &$extensionTypes ) {
			// @codeCoverageIgnoreStart
			$extensionTypes['wikibase'] = wfMessage( 'version-wikibase' )->text();

			return true;
			// @codeCoverageIgnoreEnd
		};

		// Resource Loader Modules:
		$wgResourceModules = array_merge( $wgResourceModules, include( __DIR__ . "/resources/Resources.php" ) );

		if ( defined( 'WB_EXPERIMENTAL_FEATURES' ) && WB_EXPERIMENTAL_FEATURES ) {
			include_once( __DIR__ . '/config/WikibaseLib.experimental.php' );
		}
	}

	/**
	 * Hook to add PHPUnit test cases.
	 * @see https://www.mediawiki.org/wiki/Manual:Hooks/UnitTestsList
	 *
	 * @since 0.2
	 *
	 * @param string[] &$paths
	 *
	 * @return bool
	 */
	public static function registerPhpUnitTests( array &$paths ) {
		$paths[] = __DIR__ . '/tests/phpunit/';

		return true;
	}

	/**
	 * @see https://www.mediawiki.org/wiki/Manual:Hooks/ResourceLoaderTestModules
	 *
	 * @since 0.2 (in repo as RepoHooks::onResourceLoaderTestModules in 0.1)
	 *
	 * @param array &$testModules
	 * @param \ResourceLoader &$resourceLoader
	 *
	 * @return boolean
	 */
	public static function registerQUnitTests( array &$testModules, \ResourceLoader &$resourceLoader ) {
		$testModules['qunit'] = array_merge(
			$testModules['qunit'],
			include( __DIR__ . '/tests/qunit/resources.php' )
		);

		return true;
	}

}
