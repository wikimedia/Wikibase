{
  "comments": [
    {
      "key": {
        "uuid": "6780a396_2ee4bbe4",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 2096
      },
      "writtenOn": "2018-07-01T23:24:39Z",
      "side": 1,
      "message": "This seems kinda broad. Are we sure we want all qualifiers of this type?",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51597060_1d676fe1",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 5246
      },
      "writtenOn": "2018-07-02T15:23:22Z",
      "side": 1,
      "message": "I\u0027m not sure, but we have to decide whether to store the quantity data somehow. Basing the decision on its type seems to me to be cleaner and less likely to need to be changed regularly than a whitelist of P-ids ... perhaps there is another way we could make the decision though that I haven\u0027t thought of?",
      "parentUuid": "6780a396_2ee4bbe4",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f43a19ee_24c33ecc",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 2096
      },
      "writtenOn": "2018-07-01T23:24:39Z",
      "side": 1,
      "message": "I am not sure this is the correct approach - storing it in the separate field. This means we\u0027d have P123\u003dQ5 and P123\u003dQ5|3 stored as separate field, despite the latter containing the former. Can\u0027t we use subfields with proper analyzers instead?",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce9a9c23_5188be9d",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 5246
      },
      "writtenOn": "2018-07-02T15:23:22Z",
      "side": 1,
      "message": "I know very little about analyzers, but what I think you\u0027re suggesting here is for an elastic analyzer to run at write time that would parse a statement and, if appropriate, write (some of) the data to a subfield?\n\nIf that is what you\u0027re suggesting the difficulty would again be in deciding what \"if appropriate\" means. Elastic doesn\u0027t have the datatype information that php has, it just has a string, so the only way I can think of that it could make that decision is a whitelist of P-ids, and having wikibase data stored in elastic code seems odd to me",
      "parentUuid": "f43a19ee_24c33ecc",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59d37637_ab8ce93a",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 776
      },
      "writtenOn": "2018-07-02T21:18:12Z",
      "side": 1,
      "message": "Don\u0027t these get indexed as the same thing? P123\u003dQ5|3 with the configured analysis chain is the equivalent of [P123\u003dQ5, P123\u003dQ5, P123\u003dQ5]. The |3 is extra information stored into the term frequency field, query time would still look for `P123\u003dQ5`\n\nFor stas\u0027s suggestion I don\u0027t think the wikibase data wouldn\u0027t really be stored in elastic code, you would setup something like the `pattern capture token filter` in the wikibase analysis chain which runs a regex against incoming data and indexes the captured data.",
      "parentUuid": "ce9a9c23_5188be9d",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "905e7b26_b8b64355",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 5246
      },
      "writtenOn": "2018-07-03T10:28:36Z",
      "side": 1,
      "message": "So it\u0027s not a new field? Oh, I didn\u0027t realise that ... maybe we could talk about this at the search meeting later on today",
      "parentUuid": "59d37637_ab8ce93a",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab384faf_07ca1c46",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 2638
      },
      "writtenOn": "2018-07-03T13:06:29Z",
      "side": 1,
      "message": "I feel that reusing the same input data for all usecases around properties/qualifiers is going to be relatively complex and will have very tight coupling between the format and the subfields analyzers.\n\nIf I sum up for this specific usecase we will append a \u0027|QTY\u0027 to every statements. But I worry that future evolutions will be hard to implement without breaking changes (unless we agree on a strongly typed string representation of properties that is regex friendly).\n\nIf we want to go with a single field approach I\u0027d prefer to investigate a \"custom field mapper\" approach in the extra plugin.\nAnalyzers work at the string level while a \"field mapper\" may allow us to declare a field of type \"wikibase_property\", such field could be complex (made of subproperties) e.g.:\n\n\"statements\": [\n   {\n      \"id\": \"P123\",\n      \"qualifiers\": [\n        {\n          \"entity\": \"Q123\",\n          \"quantity\": 1\n        }\n      ]\n      \"foo\": { \"bar\" : \"XYZ\" }\n   }\n]\n\n// or whatever makes sense\n\nOn the other hand the string format would have to be clear enough that it\u0027s impossible for the patterns we declare in the mapping to confuse with another qualifier.\n\nI think that a new field (like the approach we took here) makes it easy to experiment with this usecase, for the all-in-one string format I\u0027d suggest that we document it clearly somewhere before deciding if it\u0027s better/worth implementing.",
      "parentUuid": "905e7b26_b8b64355",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c858b3ad_f0e1223b",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 2096
      },
      "writtenOn": "2018-07-01T23:27:10Z",
      "side": 1,
      "message": "So we do not store the qualifier property, and every quantity value is the same? I am not sure I understand it - what is the use case for this?",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7463ccad_15642563",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 5246
      },
      "writtenOn": "2018-07-02T15:23:22Z",
      "side": 1,
      "message": "Use case: \n* I have images that have the statement \u0027depicts\u003dcat\u0027 with qualifiers \u0027quantity\u003dX\u0027\n* I want to be able find images that depict more than 2 cats, or exactly one cat\n\nIn an earlier version of this I was storing the quantity property id (e.g. wd:P180\u003dwd:Q146[wd:P1114]|2) but when talking to dcausse about it we thought this storing more data then we really needed ... if you\u0027re doing integer comparisons to find something you don\u0027t really care that much about the exact Property you\u0027re doing the comparison on",
      "parentUuid": "c858b3ad_f0e1223b",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f81d8f35_aa22cd22",
        "filename": "repo/includes/Search/Elastic/Fields/StatementQuantityField.php",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 5246
      },
      "writtenOn": "2018-07-02T16:49:19Z",
      "side": 1,
      "message": "I mean the exact property of the *qualifier*",
      "parentUuid": "7463ccad_15642563",
      "revId": "7bb1f0926fd2a9ffe47a81f551b7b673deebe498",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    }
  ]
}