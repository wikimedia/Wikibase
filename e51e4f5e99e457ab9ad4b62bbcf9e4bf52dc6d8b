{
  "comments": [
    {
      "key": {
        "uuid": "5b55d16e_1e0aaf0a",
        "filename": "repo/includes/Merge/EntityMerger.php",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 44
      },
      "writtenOn": "2018-07-26T04:22:41Z",
      "side": 1,
      "message": "I\u0027m confoosed by the \"or parts of entities\" part :)",
      "revId": "e51e4f5e99e457ab9ad4b62bbcf9e4bf52dc6d8b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80df67ce_cfb7b4dc",
        "filename": "repo/includes/Merge/ItemMerger.php",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 44
      },
      "writtenOn": "2018-07-26T04:22:07Z",
      "side": 1,
      "message": "Should be items no?\n\nEdit:\n\noh I see... You are forced into it by the interface. I realized this as I was about to comment on the interface asking why it exists. Why do you have a generic interface to deal with all types of entities? Seems like you don\u0027t need that here. Will there be a PropertyMerger? And if so, can\u0027t you just have an ItemMerged and a PropertyMerger without a common interface?\n\nIf you have an EntitySomethingWhatever interface that gets an EntityDocument, this is a red flag to me. Almost always an anti-pattern. I wrote about that in some detail here https://www.entropywins.wtf/blog/2017/05/24/generic-entity-handling-code/",
      "revId": "e51e4f5e99e457ab9ad4b62bbcf9e4bf52dc6d8b",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    }
  ]
}