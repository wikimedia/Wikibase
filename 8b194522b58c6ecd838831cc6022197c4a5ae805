{
  "comments": [
    {
      "key": {
        "uuid": "ae0e4726_2ca9bd21",
        "filename": "lib/includes/ClaimGuidGenerator.php",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-03-27T22:35:50Z",
      "side": 1,
      "message": "Why are you allowing optional injection here? Claim GUIDs consist out of an v4 GUID, not any type of guid.\n\nI\u0027m wondering why there is a GuidGenerator interface to begin with - I suspect we actually have no use for it.",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0e4726_74e8780b",
        "filename": "lib/includes/ClaimGuidGenerator.php",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-04-01T14:38:35Z",
      "side": 1,
      "message": "Using optional injection because there seems little reason to ever use anything else. We were using static composition before. We could actually just go back to that.\n\nRe needing the interface: the only use is that the ClaimGuidGenerator should not know what implementation of a \"base\" Guid generator it is using. But then, why should that ever change? Don\u0027t care much, really.\n\nThe original purpose was to have a common interface for the real GuidGenerator and the ClaimGuidGenerator. Since the two serve different purposes and have different constraints, they are not interchangeable and should not share an interface.",
      "parentUuid": "ae0e4726_2ca9bd21",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_2bfc09d5",
        "filename": "lib/includes/ClaimGuidGenerator.php",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-04-03T16:09:39Z",
      "side": 1,
      "message": "\u003e We could actually just go back to that.\n\nYes, this is what I suggest doing.",
      "parentUuid": "ae0e4726_74e8780b",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0e4726_6c7695d7",
        "filename": "lib/includes/ClaimGuidGenerator.php",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-03-27T22:35:50Z",
      "side": 1,
      "message": "IIRC the id was put into the constructor as for all use cases at that point these id generators where only needed for one specific entity. This change implies that has changed (which is fine). Can I get an example of where the generator is now used for multiple entity ids?",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0e4726_34da0079",
        "filename": "lib/includes/ClaimGuidGenerator.php",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-04-01T14:38:35Z",
      "side": 1,
      "message": "An example would be the EditEntiy Api module: the same Guid generator would be used for all new claims that get inserted.\n\nThe main reason however is that we had \"new ClaimGuidGenerator( $entity-\u003egetEntity() )\" all over the place, which is ugly, and also forced the entity to actually *have* an ID at the point when we were trying to construct the GuidGenerator (e.g. when constructing a ChangeOp). That, however, is very annoying, since the entity ID may often only be determined later, once the entity has been created.",
      "parentUuid": "ae0e4726_6c7695d7",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e23439c_ebddf174",
        "filename": "lib/includes/ClaimGuidGenerator.php",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-04-03T16:09:39Z",
      "side": 1,
      "message": "\u003e An example would be the EditEntiy Api module: the same Guid generator would be used for all new claims that get inserted.\n\nThat would be for the same entity id no?\n\n\u003e The main reason however ...\n\nOk, sounds good to me",
      "parentUuid": "ae0e4726_34da0079",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0e4726_4c7bd1bd",
        "filename": "repo/includes/ChangeOp/ChangeOpsMerge.php",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 44
      },
      "writtenOn": "2014-03-27T22:35:50Z",
      "side": 1,
      "message": "...",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0e4726_f4d3685f",
        "filename": "repo/includes/ChangeOp/ChangeOpsMerge.php",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 128
      },
      "writtenOn": "2014-04-01T14:38:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae0e4726_4c7bd1bd",
      "revId": "8b194522b58c6ecd838831cc6022197c4a5ae805",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}