{
  "comments": [
    {
      "key": {
        "uuid": "AAAARn//8ac\u003d",
        "filename": "repo/includes/specials/SpecialCreateItem.php",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-09-05T16:23:57Z",
      "side": 1,
      "message": "// Also the EDIT_AUTOSUMMARY should be handled\n$flags \u003d EDIT_NEW;\n\n// Lets define this just in case\n$hits \u003d0;\n$summary \u003d \u0027\u0027;\n$lang \u003d $wgContLang;\n\n// Is there a user supplied summary, then use it but get the hits first\nif ( isset( $params[\u0027summary\u0027] ) ) {\n\tlist( $hits, $summary, $lang ) \u003d $this-\u003egetTextForSummary( $params );\n\t$summary \u003d $params[\u0027summary\u0027];\n}\n// otherwise try to construct something\nelse {\n\tlist( $hits, $summary, $lang ) \u003d $this-\u003egetTextForSummary( $params );\n\tif ( !is_string( $summary ) ) {\n\t\t$summary \u003d $itemContent-\u003egetTextForSummary( $params );\n\t}\n}\n\n// Comments are newer user supplied\n// This is the autogenerated comment!\n$comment \u003d $this-\u003egetTextForComment( $params, $hits );\n\n$editEntity \u003d new EditEntity( $itemContent, $user );\n\n// Do the actual save, or if it don\u0027t exist yet create it.\n// There will be exceptions but we just leak them out ;)\n$status \u003d $editEntity-\u003eattemptSave(\n\tAutocomment::formatTotalSummary( $comment, $summary, $lang ),\n\t$flags\n);\n\nif ( $editEntity-\u003ehasError( EditEntity::EDIT_CONFLICT_ERROR ) ) {\n\t$editEntity-\u003ereportApiErrors( $this, \u0027edit-conflict\u0027 );\n} else if ( $editEntity-\u003ehasError() ) {\n\t$editEntity-\u003ereportApiErrors( $this, \u0027save-failed\u0027 );\n}",
      "revId": "dd4d5bab19433c0d9904808b506931be116e2416",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAASn///qc\u003d",
        "filename": "repo/includes/specials/SpecialCreateItem.php",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 172
      },
      "writtenOn": "2012-09-06T11:22:01Z",
      "side": 1,
      "message": "Sorry, I don\u0027t get this. Is this a patch?",
      "parentUuid": "AAAARn//8ac\u003d",
      "revId": "dd4d5bab19433c0d9904808b506931be116e2416",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAASn///qQ\u003d",
        "filename": "repo/includes/specials/SpecialCreateItem.php",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 128
      },
      "writtenOn": "2012-09-06T12:58:12Z",
      "side": 1,
      "message": "not sure why john posted all that code from ApiModifyItem, but here\u0027S the most important bit:\n\n$status \u003d $editEntity-\u003eattemptSave( \u0027\u0027,   EDIT_AUTOSUMMARY | EDIT_NEW );\n\nyou can also have EditEntity handel the token check:\n\n$status \u003d $editEntity-\u003eattemptSave( \u0027\u0027,   EDIT_AUTOSUMMARY | EDIT_NEW, $token );\n\nOh, and you don\u0027t need to check permissions: EditEntity automatically checks the \"edit\" and, if appropriate, the \"createpage\" permissions. If you need to check more, use $editEntity-\u003eaddRequiredPermission( \"something\" ).",
      "parentUuid": "AAAASn///qc\u003d",
      "revId": "dd4d5bab19433c0d9904808b506931be116e2416",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAASn///qU\u003d",
        "filename": "repo/includes/specials/SpecialCreateItem.php",
        "patchSetId": 13
      },
      "lineNbr": 53,
      "author": {
        "id": 128
      },
      "writtenOn": "2012-09-06T12:58:12Z",
      "side": 1,
      "message": "try this:\n\nif ( !$editPage-\u003eisSuccess() ) {\n    $editPage-\u003eshowErrorPage( $this-\u003egetOutput() )\n}",
      "revId": "dd4d5bab19433c0d9904808b506931be116e2416",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}