{
  "comments": [
    {
      "key": {
        "uuid": "0e1cb3f9_64b2a194",
        "filename": "data-access/src/MultipleRepositoryAwareWikibaseServices.php",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-05-12T10:13:51Z",
      "side": 1,
      "message": "The logic here seems a bit odd. The caller is expected to provide a watcher... why? It\u0027s unclear from this perspective.\n\nThis is another reason I would favor static composition here. The fact that MultipleRepositoryAwareWikibaseServices wraps a DispatchingServiceFactory is really an implementation detail.",
      "revId": "29ae6eca13bc62e71f1d1d6789fbb52bce5cecbd",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1cb3f9_10f18efe",
        "filename": "data-access/src/MultipleRepositoryAwareWikibaseServices.php",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-05-17T13:32:51Z",
      "side": 1,
      "message": "I agree this is odd.\nI\u0027ve made it two parameters, even if the thing passed as both will be the same instance because I kind of wanted to make it clear services of what \"interfaces\" are required here.\n\nBut as having getWatcher method in WikibaseServices seems a better option here, I guess this problem will go.\n\nI\u0027ll try out the static composition, either in the patch before or after this one, still not sure.",
      "parentUuid": "0e1cb3f9_64b2a194",
      "revId": "29ae6eca13bc62e71f1d1d6789fbb52bce5cecbd",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1cb3f9_84b7b580",
        "filename": "repo/includes/Store/Sql/SqlStore.php",
        "patchSetId": 2
      },
      "lineNbr": 453,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-05-12T10:13:51Z",
      "side": 1,
      "message": "Perhaps WikibaseServices shouldn\u0027t be a watcher, but have a getWatcher() method?",
      "revId": "29ae6eca13bc62e71f1d1d6789fbb52bce5cecbd",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1cb3f9_50b94628",
        "filename": "repo/includes/Store/Sql/SqlStore.php",
        "patchSetId": 2
      },
      "lineNbr": 453,
      "author": {
        "id": 2626
      },
      "writtenOn": "2017-05-17T13:32:51Z",
      "side": 1,
      "message": "That could work.\nI wonder whether we might want to actually have getWatcher_s_ method, in case there were multiple services that watch changes. But this is something that could be easily changed later if it turns out to be needed.",
      "parentUuid": "0e1cb3f9_84b7b580",
      "revId": "29ae6eca13bc62e71f1d1d6789fbb52bce5cecbd",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1cb3f9_90c27e38",
        "filename": "repo/includes/Store/Sql/SqlStore.php",
        "patchSetId": 2
      },
      "lineNbr": 453,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-05-17T14:20:57Z",
      "side": 1,
      "message": "Should be easy enough to make a MultiWatcher.\nMy idea was actually that the watcher returned is is kind of this already: it would know which services need notification (that is, which ones are watchers)",
      "parentUuid": "0e1cb3f9_50b94628",
      "revId": "29ae6eca13bc62e71f1d1d6789fbb52bce5cecbd",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}