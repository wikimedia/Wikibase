{
  "comments": [
    {
      "key": {
        "uuid": "AAAAQX//6Fo\u003d",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 3
      },
      "lineNbr": 427,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "Why are we putting such a message key map in the settings file? Never seen this, and looks odd.",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6EI\u003d",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 3
      },
      "lineNbr": 427,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "There are two purposes; one is to identify which messages takes languages and which takes sites as arguments, and to identify which messages that can be processed by the specific hook. An alternative is to use markers in the messages themselves, but with somewhat less control.\n\nChanged the code, don\u0027t like the new version due to less control.",
      "parentUuid": "AAAAQX//6Fo\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6Fk\u003d",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "I suggest creating an object such as \\Wikibase\\AutocommentGenerator that holds the logic (in non-static methods!) which you then instantiate here, feed the needed args, and get the result from.",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6DQ\u003d",
        "filename": "repo/Wikibase.hooks.php",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "This is called in a static context so its not really much to gain by doing that.. There are no additional args except whats available in the hook, and that is in a static callback anyhow.",
      "parentUuid": "AAAAQX//6Fk\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6Fg\u003d",
        "filename": "repo/Wikibase.i18n.php",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "What\u0027s with all these added messages? Seems like a rebase/merge that\u0027s re-adding removed stuff or so.",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6DM\u003d",
        "filename": "repo/Wikibase.i18n.php",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "Not going to do anything with it, it will be cleaned up if its wrong. That is as long as entries exists in \"en\" they should not be removed. The messages as such should be checked now because there are messages that are used in the code but missing in this file. That should be an item by itself as it is a good bit of work to do it.",
      "parentUuid": "AAAAQX//6Fg\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6Fc\u003d",
        "filename": "repo/includes/api/ApiModifyItem.php",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "missing return tag",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5/o\u003d",
        "filename": "repo/includes/api/ApiModifyItem.php",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAQX//6Fc\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6FU\u003d",
        "filename": "repo/includes/api/ApiSetAliases.php",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "self::\n\nesp since it\u0027s protected",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6Bs\u003d",
        "filename": "repo/includes/api/ApiSetAliases.php",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAQX//6FU\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6FM\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "spaces",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6BY\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAQX//6FM\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6FI\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "Why are we using constants for these rather then regular settings?",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6BU\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "Always use constants if you can.",
      "parentUuid": "AAAAQX//6FI\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5aI\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-20T14:37:30Z",
      "side": 1,
      "message": "Why not use regular settings? If you use constants, the format of the autocomment stuff cannot be configured.",
      "parentUuid": "AAAAQX//6BU\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5ZA\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-20T15:47:11Z",
      "side": 1,
      "message": "I do see reasons for using constants, I\u0027m really not sure if it should be configurable. I tend to think not. If you have a clear usecase the code can be changed after it is merged.",
      "parentUuid": "AAAAQX//5aI\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6FE\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "The global stuff can go in the else clause",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6A8\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "It can, but if something should always be initialized, then initialize before tests that could give fall through. Only exception is if the initialization is a heavy process.",
      "parentUuid": "AAAAQX//6FE\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6FQ\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 139,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "self::",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6A4\u003d",
        "filename": "repo/includes/api/ApiSetLanguageAttribute.php",
        "patchSetId": 3
      },
      "lineNbr": 139,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAAQX//6FQ\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6E8\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "I really don\u0027t like this stuff being put into various API modules. The API is not the only place where edits happen. So it will end up being even more spread then it\u0027s already and become impossible to maintain or keep consistent.\n\nI think we need one class that holds all this kind of logic for all fields of entities and then deriving ones for items, props and queries. \\Wikibase\\EntityContent could probably work for this, and if not, a new class is probably the way to go.",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6Ao\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "An auto comment is an attribute produced by the api for the saved revision, its not part of the entity.\n\nInformation from the call exist in the module during the call. Recreating missing information in other classes, or passing all args out of the module to some other class to process the information there and then passing everything back also seems weird. Process and store information in context where it belongs.",
      "parentUuid": "AAAAQX//6E8\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5Zw\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-20T14:37:30Z",
      "side": 1,
      "message": "So you\u0027re saying there are no autocomments during a regular save?",
      "parentUuid": "AAAAQX//6Ao\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5Yk\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-20T15:47:11Z",
      "side": 1,
      "message": "Autocomment in this case is generated from the information that exist due to the api call. A complete summary as saved consist of an autocomment and a manually given summary or an automatic one. It is possible to generate autocomments from other sources, for example as it is done for section titles. Still in this case the autocomment is created as part of the call through the API and to this specific module.",
      "parentUuid": "AAAAQX//5Zw\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6E4\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "Idem for this stuff",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6As\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "?",
      "parentUuid": "AAAAQX//6E4\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5Z4\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-20T14:37:30Z",
      "side": 1,
      "message": "Same as the above remark.",
      "parentUuid": "AAAAQX//6As\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6Es\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "what\u0027s the isset testing for? better have a more explicit check :)",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6AU\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "Its testing if the param is not set and then shortcuts.",
      "parentUuid": "AAAAQX//6Es\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5Zk\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-20T14:37:30Z",
      "side": 1,
      "message": "Looking at the code docs I see the method returns a string, so how can it not be set?",
      "parentUuid": "AAAAQX//6AU\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//5XQ\u003d",
        "filename": "repo/includes/api/ApiSetSiteLink.php",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-20T15:47:11Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "AAAAQX//5Zk\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6Eg\u003d",
        "filename": "repo/tests/phpunit/includes/api/ApiAutoCommentTest.php",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 44
      },
      "writtenOn": "2012-07-19T13:02:53Z",
      "side": 1,
      "message": "Oh my, I just know this test is going to be a pain :D\n\nNot sure how to avoid that though, so I\u0027m fine with this",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQX//6AI\u003d",
        "filename": "repo/tests/phpunit/includes/api/ApiAutoCommentTest.php",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 178
      },
      "writtenOn": "2012-07-19T17:27:28Z",
      "side": 1,
      "message": "..",
      "parentUuid": "AAAAQX//6Eg\u003d",
      "revId": "dbee77822d57ba63cc05b824e2d21fa7c4b99fdc",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}