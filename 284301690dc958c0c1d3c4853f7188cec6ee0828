{
  "comments": [
    {
      "key": {
        "uuid": "b7e43725_dcd1cd8a",
        "filename": "repo/tests/phpunit/includes/Api/SetAliasesTest.php",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 6779
      },
      "writtenOn": "2019-04-10T19:57:11Z",
      "side": 1,
      "message": "Accord. https://gerrit.wikimedia.org/r/plugins/gitiles/mediawiki/extensions/Wikibase/+/refs/changes/62/502862/1/repo/tests/phpunit/includes/Api/WikibaseApiTestCase.php#42 this function should end up creating a user at every call. or am I missing something?",
      "revId": "284301690dc958c0c1d3c4853f7188cec6ee0828",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec7811b8_25e4b5f3",
        "filename": "repo/tests/phpunit/includes/Api/SetAliasesTest.php",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 50
      },
      "writtenOn": "2019-04-10T22:00:21Z",
      "side": 1,
      "message": "It creates a new User object on every call (via TestUser)â€¦ but all of them share the same user name (thus represent the same user). That behavior isn\u0027t wrong in principle (as long as its not abused like in this case) and probably the best we can do for performance reasons (that user only needs to be added to the test DB once). If we want (and the performance cost is bearable, I guess), we can change that in a follow-up, though.",
      "parentUuid": "b7e43725_dcd1cd8a",
      "revId": "284301690dc958c0c1d3c4853f7188cec6ee0828",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730ed71a_938972fd",
        "filename": "repo/tests/phpunit/includes/Api/SetAliasesTest.php",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 6768
      },
      "writtenOn": "2019-04-11T08:04:42Z",
      "side": 1,
      "message": "fair enough .. maybe we can rename the function to smth like `getUserWithGroup`, also add that the \"same user\" here means same username and user in db, eventhough they are different instances of User ?\n\n----\n\nAlternative suggestions for a solution, since this test seems to have needed two different users, we can either:\n- allow that by adding a second argument to this function as the username so that callers can explicitly make two distinct users eventually, or\n- introduce function `createUniqueUserWithGroup` that randomizes the username?",
      "parentUuid": "ec7811b8_25e4b5f3",
      "revId": "284301690dc958c0c1d3c4853f7188cec6ee0828",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    }
  ]
}