{
  "comments": [
    {
      "key": {
        "uuid": "4e322bf2_c2fb2bb9",
        "filename": "lib/includes/SnakFactory.php",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-08-22T13:58:58Z",
      "side": 0,
      "message": "Note to reviewer: It\u0027s impossible to not be a Snak, see the switch above.",
      "revId": "44fa481cfed9d4fc23168267ee6fb37b035a84c0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e322bf2_822d2344",
        "filename": "lib/includes/changes/ChangeRow.php",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-08-22T13:58:58Z",
      "side": 0,
      "message": "Note to reviewer: This belongs to a test. And yes, a hell lot of tests fail if this is a string, e.g. ChangesTableTest.",
      "revId": "44fa481cfed9d4fc23168267ee6fb37b035a84c0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e322bf2_e21507eb",
        "filename": "lib/includes/formatters/EntityIdLabelFormatter.php",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-08-22T13:58:58Z",
      "side": 0,
      "message": "Note to reviewer: It\u0027s impossible to not be a string, see the switch above.",
      "revId": "44fa481cfed9d4fc23168267ee6fb37b035a84c0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e322bf2_a2d7ff27",
        "filename": "lib/includes/store/CachingPropertyInfoStore.php",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-08-22T13:58:58Z",
      "side": 0,
      "message": "Note to reviewer: This is just impossible, at least the getAllPropertyInfo call above will always return an array.",
      "revId": "44fa481cfed9d4fc23168267ee6fb37b035a84c0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e322bf2_42e61b15",
        "filename": "repo/includes/LinkedData/EntityDataRequestHandler.php",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-08-22T13:58:58Z",
      "side": 0,
      "message": "Note to reviewer: These cases are already handled above. getCanonicalFormat can not return null or an empty string. Also all methods that use the $format variable below either are fine with it being empty or trigger a useful error in this case.",
      "revId": "44fa481cfed9d4fc23168267ee6fb37b035a84c0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e322bf2_e2f4e7bb",
        "filename": "repo/includes/rdf/RdfBuilder.php",
        "patchSetId": 3
      },
      "lineNbr": 449,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-08-22T13:58:58Z",
      "side": 0,
      "message": "Note to reviewer: getEntityQName below will fail because of the type hint in the method. No need for an assert() that does the same.",
      "revId": "44fa481cfed9d4fc23168267ee6fb37b035a84c0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e322bf2_22d2ef2c",
        "filename": "repo/includes/rdf/RdfSerializer.php",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1453
      },
      "writtenOn": "2014-08-22T13:58:58Z",
      "side": 0,
      "message": "Note to reviewer: It\u0027s just extremely uncommon to add a type check to a serialize() call. We have hundreds of them and never check.",
      "revId": "44fa481cfed9d4fc23168267ee6fb37b035a84c0",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}