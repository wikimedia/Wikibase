{
  "comments": [
    {
      "key": {
        "uuid": "6e436fe2_03b2d792",
        "filename": "repo/includes/Diff/DispatchingEntityDiffVisualizer.php",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-03-28T09:38:13Z",
      "side": 1,
      "message": "Why not create it in the constructor?",
      "range": {
        "startLine": 84,
        "startChar": 3,
        "endLine": 90,
        "endChar": 5
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_63539b44",
        "filename": "repo/includes/Diff/DispatchingEntityDiffVisualizer.php",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 920
      },
      "writtenOn": "2017-03-28T09:44:09Z",
      "side": 1,
      "message": "Lazy loading. I have no strong feeling about this though.",
      "parentUuid": "6e436fe2_03b2d792",
      "range": {
        "startLine": 84,
        "startChar": 3,
        "endLine": 90,
        "endChar": 5
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_7ebd7215",
        "filename": "repo/includes/Diff/DispatchingEntityDiffVisualizer.php",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-03-28T10:43:52Z",
      "side": 1,
      "message": "I would say \"Lazy loading\" is answer to \"What?\" but not \"Why?\"\n\nDo we really need this? \n`BasicEntityDiffVisualizer` doesn\u0027t do anything in it\u0027s constructor, so I don\u0027t see a reason to add this logic.",
      "parentUuid": "6e436fe2_63539b44",
      "range": {
        "startLine": 84,
        "startChar": 3,
        "endLine": 90,
        "endChar": 5
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_a45f68e7",
        "filename": "repo/includes/Diff/DispatchingEntityDiffVisualizer.php",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-28T18:57:06Z",
      "side": 1,
      "message": "Yea, can be instantiated right away.",
      "parentUuid": "6e436fe2_7ebd7215",
      "range": {
        "startLine": 84,
        "startChar": 3,
        "endLine": 90,
        "endChar": 5
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_445464c9",
        "filename": "repo/includes/Diff/DispatchingEntityDiffVisualizer.php",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-28T18:57:06Z",
      "side": 1,
      "message": "The point of using a factory is to *avoid* knowledge about which services are needed for construction. If the factory needs all these parameters in the factory method, something is wrong.",
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_838587a1",
        "filename": "repo/includes/Diff/EntityDiffVisualizerFactory.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-03-28T09:38:13Z",
      "side": 1,
      "message": "IMO, super weird signature for factory method.\n\nIs there actual use-case where new entity type shouldn\u0027t have diff visualizer?",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_e35fab42",
        "filename": "repo/includes/Diff/EntityDiffVisualizerFactory.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 920
      },
      "writtenOn": "2017-03-28T09:44:09Z",
      "side": 1,
      "message": "Yeah.. Let me think what can I do. Regarding your question, yes. It can happen when there is no specific part of that entity type needing diff (for example properties) because BasicEntityDiffVisualizer can handle that.",
      "parentUuid": "6e436fe2_838587a1",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_fe7f4261",
        "filename": "repo/includes/Diff/EntityDiffVisualizerFactory.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 4089
      },
      "writtenOn": "2017-03-28T10:45:50Z",
      "side": 1,
      "message": "Shouldn\u0027t this method then return instance of `BasicEntityDiffVisualizer`?",
      "parentUuid": "6e436fe2_e35fab42",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_64596001",
        "filename": "repo/includes/Diff/EntityDiffVisualizerFactory.php",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-28T18:57:06Z",
      "side": 1,
      "message": "Yes, I think it should.",
      "parentUuid": "6e436fe2_fe7f4261",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e436fe2_e46570ab",
        "filename": "repo/includes/Diff/EntityDiffVisualizerFactory.php",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 128
      },
      "writtenOn": "2017-03-28T18:57:06Z",
      "side": 1,
      "message": "The factory method signature should not encode knowledge about what services are needed. These should better be injected in the factory\u0027s constructor. Or better yet, this class should know nothing about these services at all. If I\u0027m not mistaking, only the callback closures can know about them.\n\nOne major point of having a factory is to hide these details from the code that needs to instantiate EntityDiffVisualizers.",
      "revId": "d5ecf0438b2dc96bd6155ceaacffb29bf45ef6ef",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}