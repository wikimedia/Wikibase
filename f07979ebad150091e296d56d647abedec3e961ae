{
  "comments": [
    {
      "key": {
        "uuid": "0ebaf39b_234dfdc7",
        "filename": "repo/includes/rdf/Values/ObjectUriRdfBuilder.php",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "hey, I added the strval because you complained that there is no guarantee that this is a string ;)",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_a3d00dcd",
        "filename": "repo/tests/phpunit/includes/Dumpers/RdfDumpGeneratorTest.php",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "No, this is not the same thing. The other code produces far superior output in the case of failure.\n\nI\u0027m all for using normalizeData() here instead of sort(). But the logic of using $extra and $missing arrays should be kept. They make it a *lot* easier to understand failures. Add a line in the middle of the expected data to trigger a failure, and compare the output with the old and the new code.",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_87014bbb",
        "filename": "repo/tests/phpunit/includes/Dumpers/RdfDumpGeneratorTest.php",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1453
      },
      "writtenOn": "2015-11-23T07:37:23Z",
      "side": 1,
      "message": "What does \"far superior\" mean? I tested that and compared the two outputs and found that the \"cleaner\" approach is not worth the trouble but can instead add confusion. It seems you did not read my comment:\nhttps://gerrit.wikimedia.org/r/#/c/252026/8/repo/tests/phpunit/includes/Dumpers/RdfDumpGeneratorTest.php",
      "parentUuid": "0ebaf39b_a3d00dcd",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_c243a6b4",
        "filename": "repo/tests/phpunit/includes/Dumpers/RdfDumpGeneratorTest.php",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-23T11:20:21Z",
      "side": 1,
      "message": "It\u0027s far superior for the case of a couple of lines missing (or added). If the line just changes a little, but doesn\u0027t change position when sorting, plain old assertEquals works fine. If the line changes position, or lines are added or removed, the output becomes unusable.",
      "parentUuid": "0ebaf39b_87014bbb",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_64e19f96",
        "filename": "repo/tests/phpunit/includes/Dumpers/RdfDumpGeneratorTest.php",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1453
      },
      "writtenOn": "2015-11-24T09:01:44Z",
      "side": 1,
      "message": "So will we reimplement this in every test that calls assertEquals on arrays? What about fixing assertEquals instead?",
      "parentUuid": "0ebaf39b_c243a6b4",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_63d215d5",
        "filename": "repo/tests/phpunit/includes/rdf/FullStatementsRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "why trim only the right side?",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_27f09fd5",
        "filename": "repo/tests/phpunit/includes/rdf/FullStatementsRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1453
      },
      "writtenOn": "2015-11-23T07:37:23Z",
      "side": 1,
      "message": "Because explode() does not ignore the last newline in a text file. This, but *only* this should be trimmed. Everything else should make the test fail.",
      "parentUuid": "0ebaf39b_63d215d5",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_e3eda58a",
        "filename": "repo/tests/phpunit/includes/rdf/RdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "This doesn\u0027t trim every line any more.",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_c7fe63ab",
        "filename": "repo/tests/phpunit/includes/rdf/RdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1453
      },
      "writtenOn": "2015-11-23T07:37:23Z",
      "side": 1,
      "message": "And why should it? The tests succeed just fine without suppressing such errors.",
      "parentUuid": "0ebaf39b_e3eda58a",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_83e4e9a4",
        "filename": "repo/tests/phpunit/includes/rdf/RdfBuilderTestData.php",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "This doesn\u0027t trim every line any more.",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_a3e7ada6",
        "filename": "repo/tests/phpunit/includes/rdf/SiteLinksRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "I guess the \"normalize triples\" and \"compare triples\" logic should go into a helper class, this is annoying...",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_e7f927c2",
        "filename": "repo/tests/phpunit/includes/rdf/SiteLinksRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1453
      },
      "writtenOn": "2015-11-23T07:37:23Z",
      "side": 1,
      "message": "Yes, it is, but not introduced in this patch and therefore can not be a reason for a -1.",
      "parentUuid": "0ebaf39b_a3e7ada6",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_63f9b54a",
        "filename": "repo/tests/phpunit/includes/rdf/SnakRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "Would be nice to use the \"missing vs extra\" logic for all triple assertions. Perhaps in a new helper class.",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_87286b33",
        "filename": "repo/tests/phpunit/includes/rdf/SnakRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1453
      },
      "writtenOn": "2015-11-23T07:37:23Z",
      "side": 1,
      "message": "Again, they are both sorted. assertEquals works just fine. Any \"extra\" logic is superfluous.",
      "parentUuid": "0ebaf39b_63f9b54a",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_03f8f944",
        "filename": "repo/tests/phpunit/includes/rdf/TruthyStatementsRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "This no longer trims each line.",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ebaf39b_c39181fc",
        "filename": "repo/tests/phpunit/includes/rdf/Values/CommonsMediaRdfBuilderTest.php",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 128
      },
      "writtenOn": "2015-11-19T13:33:50Z",
      "side": 1,
      "message": "again... why only trim the end of the string, and not the start, too?",
      "revId": "f07979ebad150091e296d56d647abedec3e961ae",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}